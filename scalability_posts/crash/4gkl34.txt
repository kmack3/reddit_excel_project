crash
4gkl34
Macro that copies sheets to new workbook crashes after a few iterations.

Hi,

So I've created a report. I want to run this report for multiple lines of business. The macro creates a new workbook. It then loops through each line of business, getting the relevant data, running the report for that line of business and copying the report as values to the new workbook. It inserts the worksheet as the first worksheet in the new workbook.

What happens is after about 6 iterations, the macro takes considerably  longer to insert the worksheet (running through line by line with F8, this operation is the trouble). The 7th iteration crashes it. Adjusting the order of lines of business makes no difference.

So what I'm thinking is it's a memory issue, it copies the sheet to memory and then inserts it. I guess similar to how I occasionally get a message that the clipboard is full when I copy too many cells, the same issue is happening here, but with worksheets.

Has anyone got any ideas? For example, some kind of operation to clear the memory?

I have in the past had problems where another macro has been inserting lots of rows or columns in different places, and Excel tells me it's run out of memory. If I run part of it, close Excel (clearing out the cobwebs in technical-speak), run the second part, it's fine. Don't want to do that here as it's not a one-off operation, it will become a regular report.

Any input appreciated. Can post code tomorrow from work.

Thanks.


Edit, here's the code as requested.

    Sub Run_Report()
    
    Application.Calculation = xlCalculationManual
    Application.DisplayAlerts = False
    
    Set Master = ThisWorkbook
    ClassCount = Range("Report_Loop").Rows.Count
    LoopCount = WorksheetFunction.Sum(Range("Report_Loop").Columns(2))
    
    'Find the slicers for future filtering
    Set scYear = ThisWorkbook.SlicerCaches("Slicer_YearOfAccount")
    Set scClass = ThisWorkbook.SlicerCaches("Slicer_Actuarial_Class")
    
    'Workbook Checker - if it already exists then close without saving
    On Error Resume Next
    Set wbook = Workbooks("TempPremReport.xls")
    If wbook Is Nothing Then
    
    Else
        wbook.Close savechanges:=False
    End If
    Filepath = Range("Filepath")
    Folder_path = Range("Folder_Path")
    'Add temporary workbook from which the report will be printed
    Workbooks.Add
    
    
    Set wbook = ActiveWorkbook
    ActiveWorkbook.SaveAs Folder_path & "TempPremReport.xls"
    
    'Set the correct years in the slicer
    Master.Activate
    
    scYear.SlicerItems(2011).Selected = False
    scYear.SlicerItems(2012).Selected = False
    scYear.SlicerItems(2013).Selected = False
    scYear.SlicerItems(2014).Selected = False
    scYear.SlicerItems(2015).Selected = True
    scYear.SlicerItems(2016).Selected = True
    
    
    'Loop through each line of business
    For i = 1 To ClassCount
        Master.Activate
             If Range("Report_Loop")(i, 2) = 1 Then
             
             'Set class name
             Range("Class_Name") = Range("Report_Loop")(i, 1)
             class_name = Range("Class_Name")
             'Update Class name on pivot filter
             For j = 1 To scClass.SlicerItems.Count
                 If scClass.SlicerItems(j).Caption = class_name Then scClass.SlicerItems(j).Selected = True: Exit For
             Next j
             
             'Clear all other filters
             For k = 1 To scClass.SlicerItems.Count
                 If scClass.SlicerItems(k).Selected And scClass.SlicerItems(k).Caption <> class_name Then scClass.SlicerItems(k).Selected = False
             Next k
             
             
             
             
             
             Application.Calculate
            
             'Copy sheet
             Sheets("Pivot Analysis").Copy Before:=wbook.Sheets(1)
             Sheets(1).Name = class_name
        
        Else
        End If
        
    Next i
    
    'Delete the empty sheets in the new file.
    wbook.Activate
    x = Sheets.Count
    Sheets(x).Delete
    Sheets(x - 1).Delete
    Sheets(x - 2).Delete
    
    'y = Sheets.Count
    
    
    
    End Sub
    



-------------
Frst and foremost, you shouldn't use the clipboard to do these sorts of things. There are better and faster ways.

A quick cheat is to put this at the end of the loop:

>Application.CutCopyMode = False

>Application.CutCopyMode = True

This clears the clipboard.

If you're using variables as you should, just write over the variables in each iteration.
-------------
> It then loops through each line of business, getting the relevant data, running the report for that line of business and copying the report as values to the new workbook. It inserts the worksheet as the first worksheet in the new workbook.

More detail around this might be useful. If you're already creating a new workbook why populate a local worksheet and then copy, can you just build the report directly to the new workbook? Hopefully skip the copy operation completely.
-------------
You should start by posting the Macro, so we can see what's  the problem.
-------------
Can't believe it was that easy! Solution verified.
-------------
I would do yes but Im copying tabs not cells. I didnt think cut copy mode applied there. As another poster mentioned I will look at copying the cells instead and use your tip.
-------------
Ah I get what you mean, copy and paste cell values from the new to old instead of copying a tab across. Does seem like it would be less memory intensive.

Thanks for that, will update tomorrow.
-------------
Posted the code.
-------------
Will do tomorrow.
-------------
Posted for your viewing pleasure
-------------

You have awarded one point to _p0m_.    
[^Find ^out ^more ^here.](https://www.reddit.com/r/excel/wiki/clippy)

-------------
I'm not really sure that's exactly what I mean, it really depends on the specific of what you're doing.

It sounds like you create a new workbook, create a report in your macro workbook, then copy the report to the new workbook. My thought was to create the new workbook then use your macro to create the report directly into that new workbook. Of course that depends on how the report is created.

Regardless, the thought it to completely remove the action causing the failure rather than trying to mitigate it. Not sure if that's possible, but it sounds like I might've sparked a thought.
-------------
Ah right, so I have one workbook where I have all the data stored and a report template built. I want to populate the template and get it across to the new workbook somehow. Does that clear it up?
-------------
I didn't really want to copy across values as I have graphs that would be a bit of a pain, but adding application.cutcopymode = false seemed to clear the memory and it works fine now. Thanks for your input.
