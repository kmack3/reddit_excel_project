big
29udgm
Help creating macro to fetch data from a very big worksheet.

Hello again

Let me start by saying thank you for the help this subreddit has made.

I do need a little more help. I have this table that gathers information from a testing machine. 

Unfortunately it (the machine) glitches overtime and the data it gathers sometimes is corrupt. The machine simply discards it and doesn't present it which is ok. My problem i that when I want to compare it I can't line the data through evry cycle, as the cycles are not align.

I think what I need is to write a Macro that can go through every cycle and order the data through each cycle. It would be better to output the information to a new worksheet

I have pasted the data below so that it is easier to see what I'm talking about. Every test is numbered starting on 1 on cell A1. from each cycle I get 4 columns of information.


1 | 1 | 1 | 1 | 1 | 2 | 2 | 2 | 2 | 2 | 3 | 3 | 3 | 3 | 3 | 4 | 4 | 4 | 4 | 4 | 5 | 5 | 5 | 5 | 5 | 8 | 8 | 8 | 8 | 8 | 
:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | 
Cycle | Rotation deg MIN | Rotation deg MAX | Torque(max) N.cm | Torque(min) N.cm | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | 
1 | 0 | 0 | 6 | -0,2 | 1 | 0,01227 | -0,07201 | 4,45604 | -3,63708 | 1 | 0,01753 | -0,01639 | 26,6016 | 20,8175 | 1 | 0,011096 | -0,0409 | 30,1909 | 26,195 | 1 | 0,010429 | -0,02382 | -0,25988 | -3,15547 | 1 | 0,009061 | -0,25228 | 4,52757 | -4,68075 | 
2 | -0,102 | 0,0029 | 4,6 | -9,9 | 2 | -0,00496 | -0,23504 | 3,08871 | -14,1484 | 2 | 0,17634 | -0,16641 | 30,1266 | 4,22716 | 2 | 0,039589 | -0,35414 | 31,7681 | 4,03762 | 2 | 0,20094 | -0,21695 | 6,03437 | -22,3929 | 2 | 0,406289 | -0,67608 | 15,0955 | -17,5178 | 
3 | -0,269 | 0,03942 | 12,6 | -27 | 3 | 0,22037 | -0,43937 | 18,9519 | -15,7374 | 5 | 0,66759 | -0,77587 | 38,5392 | -14,8058 | 5 | 0,786566 | -0,90793 | 52,7954 | -11,6086 | 7 | 1,122444 | -1,24865 | 20,045 | -39,084 | 9 | 3,400359 | -3,56015 | 38,2888 | -43,3218 | 
8 | -0,933 | 0,26783 | 32,9 | -46,9 | 10 | 1,50431 | -1,6445 | 21,3957 | -49,9076 | 11 | 1,70861 | -1,78891 | 39,1114 | -48,7769 | 13 | 2,509433 | -2,57451 | 55,6612 | -85,8313 | 15 | 2,666444 | -2,7452 | 20,3323 | -83,1842 | 12 | 4,628309 | -4,72944 | 81,4843 | -83,9776 | 
10 | -1,284 | 0,28156 | 38,3 | -50,4 | 12 | 1,86713 | -1,96339 | 23,1361 | -68,2789 | 36 | 3,259227 | -3,24077 | 58,254 | -117,835 | 500 | 3,298703 | -3,30271 | 65,7535 | -103,789 | 23 | 3,189454 | -3,15828 | 35,1131 | -97,8488 | 18 | 6,309929 | -6,16567 | 151,012 | -140,464 | 
20 | -1,973 | -0,06709 | 39,6 | -52,5 | 29 | 3,217137 | -3,1762 | 55,4657 | -127,913 | 500 | 3,299098 | -3,29303 | 81,811 | -118,316 | 1000 | 3,296763 | -3,29461 | 64,652 | -91,1909 | 500 | 3,289944 | -3,30407 | 42,9487 | -100,784 | 500 | 6,610179 | -6,60988 | 145,458 | -141,804 | 
30 | -2,043 | -0,13644 | 37,1 | -48,5 | 500 | 3,297974 | -3,31139 | 76,8638 | -138,243 | 1000 | 3,295139 | -3,29961 | 77,2977 | -83,1807 | 1500 | 3,297033 | -3,29057 | 60,6501 | -79,8899 | 1000 | 3,291794 | -3,30673 | 38,8098 | -93,3391 | 1000 | 6,604579 | -6,6107 | 120,026 | -105,736 | 
40 | -2,064 | -0,10495 | 41,9 | -50,9 | 1000 | 3,293813 | -3,31585 | 69,4942 | -118,322 | 1500 | 3,293868 | -3,29907 | 68,1937 | -65,918 | 2000 | 3,303613 | -3,29586 | 59,5641 | -73,5116 | 1500 | 3,282714 | -3,30059 | 39,1209 | -90,9424 | 1500 | 6,610469 | -6,60664 | 94,192 | -87,2308 | 
50 | -2,078 | -0,08461 | 42,2 | -51,3 | 1500 | 3,291448 | -3,30056 | 63,5338 | -96,6239 | 2000 | 3,294109 | -3,28994 | 70,3192 | -56,1732 | 2500 | 3,299233 | -3,29136 | 62,6206 | -62,626 | 2000 | 3,293354 | -3,30831 | 37,0336 | -86,8779 | 2000 | 6,607389 | -6,59625 | 83,5168 | -77,6958 | 
60 | -2,098 | -0,07445 | 42,5 | -53,4 | 2000 | 3,2888 | -3,30039 | 59,1946 | -95,1076 | 2500 | 3,302027 | -3,29368 | 64,8081 | -43,4971 | 3000 | 3,299913 | -3,28618 | 57,7736 | -59,275 | 2500 | 3,285104 | -3,30819 | 34,8854 | -80,8573 | 2500 | 6,606729 | -6,61124 | 76,1426 | -71,3146 | 
70 | -2,087 | -0,0704 | 41,7 | -50,6 | 2500 | 3,287103 | -3,298 | 53,8027 | -93,2574 | 3000 | 3,300169 | -3,2984 | 64,683 | -38,901 | 3500 | 3,298003 | -3,29716 | 56,7544 | -55,0556 | 3000 | 3,286294 | -3,30965 | 31,9779 | -78,6221 | 3000 | 6,609519 | -6,60527 | 74,5451 | -67,4123 | 
80 | -2,089 | -0,06694 | 40,8 | -51 | 3000 | 3,287175 | -3,30101 | 54,7659 | -86,6836 | 3500 | 3,307531 | -3,29667 | 64,9238 | -32,3278 | 4000 | 3,295813 | -3,29807 | 57,1394 | -53,2806 | 3500 | 3,286434 | -3,3078 | 30,5593 | -76,2796 | 3500 | 6,609469 | -6,60857 | 70,858 | -59,9414 | 
90 | -2,097 | -0,07353 | 40,3 | -51,5 | 3500 | 3,29288 | -3,30257 | 49,4432 | -81,4575 | 4000 | 3,300917 | -3,28987 | 62,5193 | -28,773 | 4500 | 3,304743 | -3,30139 | 59,1314 | -50,531 | 4000 | 3,289144 | -3,31064 | 29,7034 | -73,1438 | 4000 | 6,606069 | -6,61083 | 66,1898 | -57,5113 | 
100 | -2,103 | -0,06808 | 39,6 | -52,8 | 4000 | 3,291198 | -3,30898 | 46,9685 | -77,9164 | 4500 | 3,304264 | -3,29316 | 61,9626 | -25,4923 | 5000 | 3,302973 | -3,28832 | 60,6322 | -45,6303 | 4500 | 3,290044 | -3,30808 | 27,8246 | -68,1835 | 4500 | 6,612169 | -6,59393 | 58,3994 | -54,0608 | 
110 | -2,116 | -0,07821 | 40,5 | -50,6 | 4500 | 3,291464 | -3,30749 | 42,6102 | -74,9761 | 5000 | 3,292565 | -3,30028 | 56,6697 | -20,4772 | 5500 | 3,309993 | -3,29868 | 58,3243 | -40,1789 | 5000 | 3,286344 | -3,30508 | 24,0076 | -65,6563 | 5000 | 6,607099 | -6,60193 | 59,6988 | -52,191 | 
120 | -2,101 | -0,07294 | 39,4 | -52,5 | 5000 | 3,284978 | -3,30349 | 40,2176 | -71,4612 | 5500 | 3,303323 | -3,29622 | 62,418 | -17,6132 | 6000 | 3,298433 | -3,29125 | 58,347 | -39,4779 | 5500 | 3,279274 | -3,29699 | 24,9195 | -62,7357 | 5500 | 6,624209 | -6,61894 | 60,4999 | -51,9115 | 
130 | -2,103 | -0,06949 | 40,5 | -50,9 | 5500 | 3,291617 | -3,29802 | 40,0972 | -65,6307 | 6000 | 3,302148 | -3,29539 | 59,3436 | -18,121 | 6500 | 3,297633 | -3,28955 | 56,2286 | -40,0317 | 6000 | 3,293774 | -3,30974 | 25,1508 | -61,2539 | 6000 | 6,605059 | -6,60758 | 53,4177 | -48,2452 | 
140 | -2,101 | -0,06553 | 39,2 | -49,1 | 6000 | 3,285654 | -3,30423 | 39,593 | -60,5273 | 6500 | 3,298495 | -3,31001 | 60,0088 | -16,638 | 7000 | 3,297933 | -3,28008 | 57,7068 | -37,7959 | 6500 | 3,288524 | -3,31577 | 23,9253 | -60,8182 | 6500 | 6,611159 | -6,60872 | 49,1762 | -45,4992 | 
150 | -2,102 | -0,06673 | 39 | -51 | 6500 | 3,288639 | -3,29848 | 42,2084 | -60,5643 | 7000 | 3,306195 | -3,30285 | 61,6157 | -18,5329 | 7500 | 3,296373 | -3,28724 | 56,2048 | -33,9639 | 7000 | 3,286274 | -3,30249 | 22,6867 | -57,9536 | 7000 | 6,605989 | -6,61128 | 45,9003 | -41,4056 | 
160 | -2,107 | -0,06612 | 38 | -52,7 | 7000 | 3,296581 | -3,30109 | 42,2406 | -57,1597 | 7500 | 3,298978 | -3,27666 | 60,0302 | -12,1415 | 8000 | 3,309703 | -3,30793 | 57,0714 | -33,9848 | 7500 | 3,295204 | -3,31434 | 23,1874 | -54,8935 | 7500 | 6,607829 | -6,59577 | 45,6536 | -41,3883 | 
170 | -2,097 | -0,06335 | 39 | -52,7 | 7500 | 3,290667 | -3,30461 | 39,3307 | -57,7432 | 8000 | 3,303009 | -3,28319 | 56,864 | -9,56476 | 8500 | 3,295053 | -3,2989 | 53,5738 | -28,3802 | 8000 | 3,289754 | -3,31528 | 21,1501 | -53,2597 | 8000 | 6,604949 | -6,61791 | 43,7546 | -40,7237 | 
180 | -2,098 | -0,06791 | 37,1 | -52,1 | 8000 | 3,285968 | -3,29946 | 35,4528 | -58,0394 | 8500 | 3,296612 | -3,29205 | 59,6821 | -12,4162 | 9000 | 3,299273 | -3,29689 | 54,431 | -29,5043 | 8500 | 3,289184 | -3,30288 | 21,534 | -48,2702 | 8500 | 6,603849 | -6,61525 | 43,0655 | -38,4659 | 
190 | -2,128 | -0,06458 | 40,3 | -51,1 | 8500 | 3,291239 | -3,30249 | 35,9368 | -53,2419 | 9000 | 3,297384 | -3,29072 | 60,6382 | -7,81834 | 9500 | 3,304613 | -3,29807 | 53,4081 | -27,5362 | 9000 | 3,291054 | -3,31542 | 20,8855 | -48,2023 | 9000 | 6,610559 | -6,58871 | 41,5599 | -39,2312 | 
200 | -2,105 | -0,06641 | 36,5 | -51,2 | 9000 | 3,284045 | -3,30352 | 31,7049 | -51,7362 | 9500 | 3,304779 | -3,29964 | 60,569 | -9,61006 | 10000 | 3,303583 | -3,29368 | 53,55 | -26,5968 | 9500 | 3,285804 | -3,31743 | 21,3456 | -45,8002 | 9500 | 6,621549 | -6,61057 | 43,2801 | -39,2938 | 
210 | -2,108 | -0,064 | 36,8 | -52,7 | 9500 | 3,296871 | -3,30038 | 33,592 | -49,0695 | 10000 | 3,29654 | -3,29292 | 59,5474 | -10,0666 | 10500 | 3,301073 | -3,29881 | 52,8944 | -22,5776 | 10000 | 3,288304 | -3,31854 | 22,4638 | -44,4353 | 10000 | 6,608489 | -6,59985 | 44,1265 | -40,1676 | 
220 | -2,102 | -0,06018 | 36,2 | -51,2 | 10000 | 3,288784 | -3,30295 | 34,3478 | -47,7755 | 10500 | 3,298913 | -3,29922 | 57,3373 | -12,0759 | 11000 | 3,301233 | -3,30087 | 53,3962 | -22,5192 | 10500 | 3,291244 | -3,30347 | 21,826 | -41,6428 | 10500 | 6,616069 | -6,6161 | 44,4317 | -38,9165 | 
230 | -2,094 | -0,07054 | 37,2 | -52,2 | 10500 | 3,289323 | -3,30442 | 32,7289 | -46,3307 | 11000 | 3,307048 | -3,2929 | 59,2327 | -10,9309 | 11500 | 3,301713 | -3,29776 | 54,9376 | -23,9462 | 11000 | 3,289434 | -3,32156 | 22,5317 | -42,2382 | 11000 | 6,600569 | -6,59916 | 42,0737 | -39,888 | 
240 | -2,086 | -0,06546 | 37,8 | -51,1 | 11000 | 3,292341 | -3,30578 | 29,3136 | -44,9139 | 11500 | 3,295719 | -3,30045 | 59,818 | -10,2842 | 12000 | 3,299963 | -3,29556 | 53,4761 | -22,7124 | 11500 | 3,289024 | -3,30108 | 22,7487 | -41,5528 | 11500 | 6,608199 | -6,61023 | 42,4433 | -41,8055 | 
250 | -2,093 | -0,07095 | 37 | -50,5 | 11500 | 3,282926 | -3,3072 | 32,1722 | -48,3763 | 12000 | 3,30012 | -3,29374 | 57,0321 | -9,00567 | 12500 | 3,297113 | -3,29534 | 54,8518 | -17,4046 | 12000 | 3,289514 | -3,29964 | 20,5398 | -40,8179 | 12000 | 6,603509 | -6,60601 | 37,365 | -39,0297 | 
260 | -2,096 | -0,06554 | 38,4 | -51 | 12000 | 3,290611 | -3,30483 | 33,6432 | -48,0866 | 12500 | 3,292814 | -3,29931 | 59,0062 | -7,40707 | 13000 | 3,299773 | -3,29849 | 54,7004 | -18,1353 | 12500 | 3,296154 | -3,30811 | 19,2773 | -41,2601 | 12500 | 6,602969 | -6,60318 | 38,9922 | -39,2872 | 
270 | -2,085 | -0,06811 | 38,4 | -50 | 12500 | 3,29181 | -3,30055 | 34,07 | -43,186 | 13000 | 3,297384 | -3,29771 | 57,3897 | -6,49452 | 13500 | 3,304403 | -3,29342 | 55,2547 | -15,0269 | 13000 | 3,295034 | -3,30916 | 21,4016 | -39,8082 | 13000 | 6,610549 | -6,60688 | 39,9089 | -41,4401 | 
280 | -2,094 | -0,06984 | 39,8 | -49,9 | 13000 | 3,287674 | -3,31484 | 37,7905 | -45,5904 | 13500 | 3,296668 | -3,29534 | 57,6723 | -10,8027 | 14000 | 3,300623 | -3,2898 | 53,7252 | -14,0041 | 13500 | 3,297474 | -3,31161 | 19,7673 | -41,3483 | 13500 | 6,609199 | -6,6


-------------
Can you use a few lines to show us a before and after? How you want it to appear?
-------------
help?
-------------
This macro is a bit long but it seems to do the job. You'll see I like to use variables to set a lot of options instead of hard coding things. You need the Sub() and all the Functions for this to work properly. Let me know if you have questions.

    Option Explicit
    
    Sub AlignData()
    
        'Copies non-sequential datasets to a new sequential data sheet.
        
        'Requires the following functions:
        '   FindLastRow
        '   FindLastCol
        '   WsExist
        '   FindMaxLongValue
    
        'Contributed to Reddit on 20140708 by random_tx_user
        
        'http://www.reddit.com/r/excel/comments/29udgm/help_creating_macro_to_fetch_data_from_a_very_big/
    
        Dim iTest As Long       'Counter used to iterate through tests
        Dim iTestCol As Long
        Dim iCycle As Long      'Counter used to iterate through cycles
        Dim LastCol As Long
        Dim LastRow As Long
        Dim LastCycle As Long
        Dim LastTest As Long
        Dim TestNoRow As Long
        Dim FirstDataRow As Long
        Dim TestValue As Long
        Dim HeaderRow As Long
        Dim wsCleanName As String
        Dim WsClean As Worksheet
        Dim wsOrgName As String
        Dim wsOrg As Worksheet
        Dim CycleNum As Long
        Dim i As Long
        Dim MakeItFaster As Boolean
        
        'Simple error handling
        On Error GoTo ExitSub
        
        'Set Variables / Options
        TestNoRow = 1               'Define the row where the test number will be
        HeaderRow = 2               'Define the row where the columns names will be
        FirstDataRow = 3            'Define the first row of actual data (ignoring headers, etc.)
        LastCycle = 0               'Define initial LastCycle value. Should be "0"
        wsCleanName = "CleanData"   'Set the name for the new combined data sheet
        wsOrgName = "Sheet1"        'Name of the worksheet where original data will be. "Sheet1" is default
        MakeItFaster = False        'Must be True/False. If true, turns off screen updating.
        
        If MakeItFaster Then
            Application.ScreenUpdating = False
        End If
        
        Set wsOrg = Sheets(wsOrgName)
        
        'Switch to the original data sheet
        wsOrg.Activate
    
        'Create a new worksheet for the clean data. Includes error checking to ensure the sheet does not
        '  already exist and option to input a different name
        If Not WsExist(wsCleanName) Then
            Worksheets.Add().Name = wsCleanName
            Set WsClean = Worksheets(wsCleanName)
        Else
            wsCleanName = InputBox("What would you like the new sheet to be named?", _
                "Worksheet " & wsCleanName & " already exists!")
                
            If wsCleanName = "" Then
                Worksheets.Add
                Set WsClean = ActiveSheet
            Else
                Worksheets.Add().Name = wsCleanName
                Set WsClean = Worksheets(wsCleanName)
            End If
        End If
        
        'Switch back to the original data sheet
        wsOrg.Activate
        
        'Find the last set of test data. Assumes each data set will have 5 columns
        LastTest = FindLastCol(TestNoRow) / 5
        
        'Find the maximum cycle number from all tests
        For iTest = 1 To LastTest
            'Defines the cycle number column for test number iTest
            iTestCol = iTest * 5 - 4
            
            'Find last row in cycle number column for test number iTest
            LastRow = FindLastRow(iTestCol)
        
            'Find max value in cycle number column
            TestValue = FindMaxLongValue(Range((Cells(FirstDataRow, iTestCol)), Cells(LastRow, iTestCol)))
                
            'If the test value is greater than stored LastCycle value, then LastCycle is updated
            If TestValue > LastCycle Then
                LastCycle = TestValue
            End If
        Next iTest
        
        'Copy the test number and data header to the new sheet
        Range(Cells(TestNoRow, 1), Cells(HeaderRow, LastTest * 5)).Copy WsClean.Cells(1, 1)
        
        WsClean.Activate
        
        'Create cycle number column that is sequential from 1 to the biggest LastCycle. Starts the count
        '  at row 3
        For iCycle = 1 To LastCycle
            Cells(iCycle + 2, 1) = iCycle
        Next iCycle
    
        wsOrg.Activate
        
        'Cycle through each test on wsOrg
        For iTest = 1 To LastTest
            'Defines the cycle number column for test number iTest
            iTestCol = iTest * 5 - 4
            
            'Deifines range of cycles to loop through for each each test
            LastRow = FindLastRow(iTestCol)
            For iCycle = 3 To LastRow
                Range(Cells(iCycle, iTestCol + 1), Cells(iCycle, iTestCol + 4)).Copy _
                    WsClean.Cells(Cells(iCycle, iTestCol) + 2, iTestCol + 1)
            Next iCycle
        Next iTest
        
        WsClean.Activate
        
        For i = 2 To FindLastCol(2)
            If Cells(HeaderRow, i).Value = "Cycle" Then
                Columns(i).Delete
            End If
        Next i
            
    'Clean up object variable and exit sub
    ExitSub:
        Set wsOrg = Nothing
        Set WsClean = Nothing
        Application.ScreenUpdating = True
    
    End Sub
    
    Function FindLastCol( _
        ByVal Row As Long) As Long
        
        'Gives you the last cell with data in the specified row
        '  Will not work correctly if the last row is hidden
    
        With ActiveSheet
            FindLastCol = .Cells(Row, .Columns.Count).End(xlToLeft).Column
        End With
        
    End Function
    
    Function FindLastRow( _
        ByVal Col As Long) As Long
        
        'Gives you the last cell with data in the specified row
        '  Will not work correctly if the last row is hidden
    
        With ActiveSheet
            FindLastRow = .Cells(.Rows.Count, Col).End(xlUp).Row
        End With
        
    End Function
    
    Function FindMaxLongValue( _
        ByVal SearchRange As Range) As Long
        
        'Finds the maximum integer value within the given range
        '  and returns is as a long variable. Will error out
        '  if max value is outside the rnage -2,147,483,648 to
        '  2,147,483,647
        
        ' Uses the Application.Max function to find the max value
        
        FindMaxLongValue = Application.Max(SearchRange)
                
    End Function
    
    Function WsExist( _
        WsName As String) As Boolean
    
        Dim Ws As Worksheet
    
        WsExist = False
           
        For Each Ws In Worksheets
            If Ws.Name = WsName Then
                WsExist = True
                Exit Function
            End If
        Next Ws
        
    End Function
-------------
something like this

edit: fixed row "cycle 10"

1 | 1 | 1 | 1 | 1 | 2 | 2 | 2 | 2 | 2 | 3 | 3 | 3 | 3 | 3 | 4 | 4 | 4 | 4 | 4 | 5 | 5 | 5 | 5 | 5 | 8 | 8 | 8 | 8 | 8 | 
:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | 
Cycle | Rotation deg MIN | Rotation deg MAX | Torque(max) N.cm | Torque(min) N.cm | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | Cycle | offset_rot Max | offset_row Min | torque_N.cm Max | torque_N.com Min | 
1 | 0 | 0 | 6 | -0,2 | 1 | 0,01227 | -0,07201 | 4,45604 | -3,63708 | 1 | 0,01753 | -0,01639 | 26,6016 | 20,8175 | 1 | 0,011096 | -0,0409 | 30,1909 | 26,195 | 1 | 0,010429 | -0,02382 | -0,25988 | -3,15547 | 1 | 0,009061 | -0,25228 | 4,52757 | -4,68075 | 
2 | -0,102 | 0,0029 | 4,6 | -9,9 | 2 | -0,00496 | -0,23504 | 3,08871 | -14,1484 | 2 | 0,17634 | -0,16641 | 30,1266 | 4,22716 | 2 | 0,039589 | -0,35414 | 31,7681 | 4,03762 | 2 | 0,20094 | -0,21695 | 6,03437 | -22,3929 | 2 | 0,406289 | -0,67608 | 15,0955 | -17,5178 | 
3 | -0,269 | 0,03942 | 12,6 | -27 | 3 | 0,22037 | -0,43937 | 18,9519 | -15,7374 ||| | 
5 ||||||||| |  5 | 0,66759 | -0,77587 | 38,5392 | -14,8058 | 5 | 0,786566 | -0,90793 | 52,7954 | -11,6086 | 
7||||||||||||||| 7| 1,122444 | -1,24865 | 20,045 | -39,084 | 
8 | -0,933 | 0,26783 | 32,9 | -46,9 |
9|||||||||||||||||||| 9| 3,400359 | -3,56015 | 38,2888 | -43,3218 | 
 10 |||||10| 1,50431 | -1,6445 | 21,3957 | -49,9076 
-------------
Are the Cycle in column A the 'master' count? If you are just trying to line the data up horizontally, Column A only goes to 280, so you would have a ton of blank data between 280 and 500. 

I assume you want cycles 1 to whatever the biggest number in columns A, F, K, P, etc is?
-------------
Thank you very much for your time and work.

Unfortunately it only creates a new worksheet and nothing else. can you take a look at it again?
-------------
In the second Cycle column, is the 10 supposed to be next to the 8 like that? 
-------------
I have been thinking about that. I will get a lot of blanks.

There isn't a master count. After 1000 cycles it will go smoothly because there aren't many glitches..


-------------
I tested the macro several times using your dummy data so It should work unless your data is laid out differently.

What's happening is an error is causing the macro to exit unexpectedly. In my code the line

    On Error GoTo ExitSub

tells the macro to exit if there is an error. Change this to

    'On Error GoTo ExitSub

so the error handling is ignored and you can start trouble shooting.


Start in the "Options" section. Read the comments and you'll see what each option does and were I was going with things. Once you verify these are correct, use the F8 key to step through the code and find the error.

If all else fails, PM me a link to an actual data file you have, and I'll see whats up.
-------------
no my bad!!

I have corrected it.

On the main post is what I have as a file. 
-------------
Your cycle count is sequential, correct... e.g. 1,2,3,etc.?

What about the numbering in Row 2? What is that about? Is it sequential as well or will it skip numbers as you have show (1,2,3,4,5,8)?
-------------
Thank you for your reply. I get an error on 

    Range(Cells(TestNoRow, 1), Cells(HeaderRow, LastTest * 5)).Copy WsClean.Cells(1, 1)


I don't know enough VBA to fix this. Again thanks for your help

edit: I do have a lot of columns, many more than I have shown here. will this be the issue?
-------------
the rows with the "cycle" are sequential in increasing numbers

the rows with the other names are data that is not sequential. 
-------------
I just tested the code again in Excel 2010 and it works perfectly so I'm not sure why that line is giving you an error. 

Try changing it to 

    Range(Cells(TestNoRow, 1), Cells(HeaderRow, LastTest * 5)).Copy
    WsClean.Cells(1, 1).PasteSpecial xlValues

If this works, step though the remaining code (F8) and tell me if there are other errors.
-------------
Just tested the code on your workbook, and as I mentioned before you should read the comments.

Line 45 in the code above,

    wsOrgName = "Sheet1"        'Name of the worksheet where original data will be. "Sheet1" is default

should be set to 

    wsOrgName = "RAW"        'Name of the worksheet where original data will be. "Sheet1" is default

This variable defines the location (sheet name) of your original data. When set incorrectly, the macro assumes there is no data or the sheet does not exist and errors out. 

Also, set 

           Application.ScreenUpdating = False

to 

            Application.ScreenUpdating = True

**Be warned**, this macro will take a **a long time to complete** because your data supposedly has **hundreds of thousands of tests** and the macro has to evaluate each one.
-------------
hi

once again thanks for the help. do you think more than 12 hours is too much??
-------------
Ya...that's a bit much. How many rows of data do your sheets have? Is there a typical numbering sequence you see...e.g. every 10, 20, etc?
-------------
I have 10 columns with 250.000 lines. It has been running for 48h. Not sure if I  should break it or let it go a little more 
-------------
Break it and see where its at... that sounds insanely long
-------------
Can you send the original file via dropbox?

