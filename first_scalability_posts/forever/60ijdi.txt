forever
60ijdi
Excel formula cripples program - takes forever to process, seeking solution or alternative

I have a large spreadsheet that I generate via xlsxwriter in Python.  It works well.  I just added another formula to it and now it is unusably slow.  I'm hoping someone can help me understand what I can do to resolve it.  Clearly I am doing this the wrong way.  
  
I have two Worksheets, 'App Details' and 'DB Details'.  On each tab, I have a long list of server names, application/database names, etc.  It is expected that each tab will have about 40k rows.  

On the App Details tab, I have a statement that IF someone puts in any text into the Select column, it will check how many instances of that server name are in App Details and output it into a column called App Count.  I have another formula that will check how many instances of that Server Name are in DB Details and output it into a column called DB Count.  It also checks to make sure the App Name or DB Name isn't "None".  

This is repeated on the DB Details tab.  
This worked pretty darned well, until I added one more feature.  I wanted to check if a server name on DB Details matched a server name on App Details AND the Select field had text in it on the App Details tab, indicate so.  And it works, but it cripples my spreadsheet so badly that it is unusable.  
  
Here is the code:  
  
App Details:  
  
    Column J8:              <blank, no formula>
    Column K8:           =IF(J8<>"",COUNTIFS('App Details'!A$1:A$99999,'App Details'!A8,'App Details'!F$1:F$99999,"<>None"),"Not Selected")
    Column L8:            =IF(J8<>"",COUNTIFS('DB Details'!A$1:A$99999,'App Details'!A8,'DB Details'!F$1:F$99999,"<>None"),"Not Selected")  
    
EDIT:  Column A is where the server name lives, Column F is where the DB/App name lives, depending on the sheet.  
  

DB Details:  
  
    Column J8:              <blank, no formula>  
    Column K8:              =IF(J8<>"",COUNTIFS('App Details'!A$1:A$99999,'DB Details'!A8,'App Details'!F$1:F$99999,"<>None"),"Not Selected")  
    Column L8:              =IF(J8<>"",COUNTIFS('DB Details'!A$1:A$99999,'DB Details'!A8,'DB Details'!F$1:F$99999,"<>None"),"Not Selected")  
    Column M8:             =IF(COUNTIFS('App Details'!A:A,'DB Details'!A8,'App Details'!J:J, "<>"),"Selected","Not Selected")  
  
I've tried trimming my size down from 99999 to see if that would help... it did not, but maybe I need to apply that all throughout?  Anyway, on DB Details and on App Details, there are about 40k rows to go through.  Without Column M, this works very quickly and effectively.  The moment Column M is involved, this thing is dead slow.  
  
This usually resolves with me having done something colossally stupid, so please feel free to point out my fatal failure.  
  
Thanks!


-------------
Sounds like a job for PowerBI. Will do all that sort of stuff effectively instantly. What version of excel do you have?
-------------
Your column m goes A:A/J:J instead of 1-99999.

Hard pressed to see why that would matter but it's the only thing that stands out 


Edit: also maybe add a * after that <> in the condition just in case it's reading that wrong
-------------
I'm not really looking for another tool.  This sheet, once built, will be used by many different people inside my organization.  
I am using Office 2013.  
I'm sure I am doing this inefficiently.  I need to remain within the confines of Excel for this to work.  
-------------
Thank you.  It initially was 1-99999 but I changed it. I had read somewhere that referencing cells "made them live", so to speak, and I was concerned that perhaps I was artificially creating my own problem.  This was not the case.  :(  
I will add the * and see if that changes anything.   
  
EDIT: It changed nothing unfortunately.  I restored the 1-99999 version and included the *, but nothing improved.
-------------
Excel 2013 has Power Pivot built in as standard. You just need to enable the add in. It will take a little bit of fiddling but will do all the counties type of stuff very fast.

Failing that I'd try converting your data into Excel tables and then your formulas can reference columns in the tables rather than than an entire column as they do now..
-------------
ahh okay. 

I think I see it, depends on your data though. 

Notice in all your other IF's, you start off by conditioning on IF J8<>"". This means the calculation short-circuits whenever J8 is blank (which is the case for a lot of your cells I think). 

For the formula in M8, you are doing the COUNTIFS for ALL the 99999  cells, even the ones where J8 is blank. 

If I understand your setup correctly now that I'm reading it, you are basically using COUNTIFS as a "MATCH" formula? 

If possible, I think you could see a good performance increase from switching to MATCH instead of countifs. 

For MATCHing the multi-criteria column, it depends slightly on your data, but it might be safe to do some sort of MATCH(A8&"|?*",A1:A99999&"|"J1:J99999,0) or something along those lines


-------------
I'll check out Power Pivot and see what I can do with that.  I haven't really worked with Pivot tables before, so this might be a bit rough.  
  
I'm not sure I understand your last statement. 
-------------
I'll check out MATCH (though I've often been warned off of playing with matches... we'll make an exception here. :) ).  
  
The way I understood my IF J8 <>"" to read is as "If J8 is not Blank".  If J8 is blank, there's nothing else that matters and all processing of that cell can stop outright.  Only if J8 has content do we care about what the content in the adjacent cells are.  It doesn't matter what the content of J8 is, just so long as it isn't blank.  
Perhaps my comprehension of this is wrong and there is a better way of doing this?  I would have thought that this would make the processing faster, if anything.  "If blank, move on" should be dead simple for Excel.  
  
EDIT:  Hmmm, I see that I am doing it inside a COUNTIFS.  Maybe that's the crux - I'm not checking if J8 is blank first.  That said, I think I wrote it that way since I couldn't figure out how to otherwise do it.  I'll think on that for a bit, but am definitely open to suggestion.  
-------------
My last statement is that you could try going to your two tables and press Ctrl + T so they turn into a table. When you go to do your formulas if you select the whole column the syntax will change to refer to a column of the table rather than an entire excel column.

As an analogy, I think what you are trying to do is empty a swimming pool with a  thimble. Maybe someone can show you the most efficient way to do it, but it won't be quick. Really you need to get a pump, but you will need to spend a little time learning how to use it. Excel is not a good tool for 10s of thousands of rows.
-------------
Yes, the "if blank move on" does speed it up. And it's not happening in column M.

You can wrap your countifs in if(j8<>"") for column M as well as have j:j<> in the criteria for the countifs.

One of them short circuits the calculation if there is nothing in the row you are currently looking at, the other is used as a criterion when counting cells 
-------------
Hmmm, that's unfortunate.  Your suggestion to use Ctr-T and whatnot appears to be beyond the scope of what I am able to do.  I am using Python to create this Excel spreadsheet as a form of reporting tool.  If I have to open the document, change things around and re-upload it, that removes the automated creation of this report.   
I am beginning to think this may not be possible, which is unfortunate because it would greatly aid in the usage and utility of this document.  If Excel could do a simple array to store values in, and to search against, this problem would be resolved in seconds.  Sadly, it doesn't seem to do that.  
Thanks for your assistance however.  I do appreciate it.
-------------
I was thinking about that, I just couldn't figure out how to do it.  I cannot "cast" data into another cell (if j8 = data, find matching M row and set Mx to value).  
Subsequently I have to start in M.  I cannot figure out how to isolate the right J to check.  So if I am in M8 on the DB table, I need to find the right row on the app table and check that J value, and it won't be guaranteed to be J8.  It could be J23, for example.  Further, it might be more than one row, as duplication is totally a thing here.   
I thought I would build another sheet... 'hiddenWork' (and hide it later).  I gave each row a value:  
  
    =IF('App Details'!J6<>"",'App Details'!A6,"")  
  
(where the 6 is in the 6th row, 7 would be the 7th row, etc).  Back on Db Details, I put the following into M:  
  
    =IF(ISNUMBER(MATCH(A4,hiddenWork!$A$1:$A$99999,0)),"Selected","Not Selected")  
  
Does it work?  Yes.  It is much faster, but still kind of slow.  Down from 10 seconds per change in J to about 5 seconds per change in J.  Still really slow however.  I'm starting to think this isn't possible.  
-------------
Yeah, I hope I didn't come across as unhelpful. Just trying to illuminate that there is a limit to what you can given the constraints you have. It is the story of my life.

If I had a free hand for your problem I would have Python dump the outputs into SQL Server (or even access), use Power Query to pull the data into Power Pivot and then create a pivot table from there. Would all be automated and fast. Even skipping the first step and using Power Query an dump would be pretty easy and fast.

Any chance you could easily anonymise your data and upload the excel to dropbox or something. I'd need to look at it but I guess it would only take me like 5 mins. You would need to be able to download Power Query (free MS download) to automate that step.
-------------
Thank you for trying.  This is all happening on a Linux backend and pulled onto a user's desktop via HTTP.  Running it into a MS product like SQL Server or MS Access isn't really an option here.  It all has to be built in Python, then the formulas need to compute inside the document.  As the user selects options, I am wanting the displayed data to change to reflect their selections.  What I am going for is when they select a server (Column J), it lights up other instances of that server elsewhere in the document making it easier to find and deal with.  Otherwise they are doing manual sorting and filtering to find the same information.   
  
I'm not sure if I can properly anonymize this data, but I can look into it if you are still interested.
