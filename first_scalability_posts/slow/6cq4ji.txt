slow
6cq4ji
Slow workbook due to many uses of INDIRECT function

I understand INDIRECT is a volatile function that drains computer resources. However, I believe I am justified in its use. 
In my scenario, I have built a template to use with multiple customer data sheets. INDIRECT allows me to refer to these sheets (by referring to a cell that contains the sheet name) without losing reference if a data sheet gets removed or replaced with another customer's. This also allows me to variably change the end of a range (as some customer's data goes to 20 and some go to 10000 rows) rather than set an arbitrarily long range or using entire row/column as the range.
My workbook is not unbearably slow, but I am seeking any advice for a more efficient solution. Thanks in advance!


-------------
Consider using dedicated CRM software instead of a spreadsheet to handle it.

Although Excel CAN do it, it's not designed to be a database and is therefore not as efficient.
-------------
INDIRECT only works when the other workbooks are open. If you have dozens or more workbooks open, that can be a drain on system resources.

If you'd only be adding new customer workbooks but never or only rarely removing old/former customer worksheets, you may be better off using formulas to create formulas.

For example, with full workbook pathnames in A5:A24, defined names in E1:T1 or worksheet+range addresses in E2:T2,

    B5:  =FIND(CHAR(127),SUBSTITUTE(A5,"\",CHAR(127),LEN(A5)-LEN(SUBSTITUTE(A5,"\",""))))
    E5:  ="='"&IF(E$1<>"",$A5&"'!"&E$1,LEFT($A5,$B5)&"["&MID($A5,$B5+1,255)&"]"&IF(COUNTIF(E$2,"*'!*"),E$2,SUBSTITUTE(E$2,"!","'!")))

Fill E5 right into F5:T5, then select B5:T5 and fill down into B6:T24.

E5:T24 will contain formulas which return text values which look like external reference formulas. Copy E5:T24, paste special as values on top of itself to convert the formulas to constant text which look like formulas, then replace __=__ with __=__ (yes, replace equal signs with themselves) which effectively enters those text constants as formulas.

If you want to so something moderately complicated with those references, e.g., calculating the average of Summary!C5:C1000 in each, add a _template_ formulas in E3:T3. e.g., __AVERAGE(@)__. Then change the E5 formula to

    E5:  ="="&SUBSTITUTE(IF(E$3<>"",E$3,"@"),"@","'"&IF(E$1<>"",$A5&"'!"&E$1,LEFT($A5,$B5)&"["&MID($A5,$B5+1,255)&"]"&IF(COUNTIF(E$2,"*'!*"),E$2,SUBSTITUTE(E$2,"!","'!"))))

Before the paste-special as values, copy E5 and paste into D4 to keep the generating formula handy. You can then add more customer workbooks in column A as well as more defined names or worksheet+range references in rows 1 or 2 plus formula templates in row 3. Fill the formulas in column B down, and copy the formula from cell D4 and paste into new cells below and to the right of cell D4.

These will be external reference formulas which will work whether the customer workbooks are open or closed. Recalculation will still be slow, but the formulas won't recalc all the time as they would with INDIRECT.

Also, unless you're using a lot of VLOOKUP formulas into other workbooks, using unnecessarily large ranges isn't much of a problem with SUM, COUNT, AVERAGE, MAX, MIN etc because Excel ignores blank cells quickly. VLOOKUP and MATCH are the only big headaches.
-------------
Thoughts on using ODBC as opposed to referencing workbooks via functions? - http://itsnotaboutthecell.com/2016/06/20/office-database-connection/
-------------
Thanks for the detailed response. Just to clarify, I am not referencing other workbooks, only worksheets within my template (one workbook). I simply remove one sheet of data and replace it with another set of data. 
-------------
If everything is in the same workbook, it CAN be easier, but it involves longer formulas.

First step, add a new worksheet and in it create a list of the names of all customer worksheets in the workbook. Ideally in a single column. Name that list CWSList. Then instead of INDIRECT("'"&custname&"'!X99"), you'd find the index of the customer name entry in the list,

    MATCH(custname,CWSList,0)

better still to sort CWSList in ascending order, then drop the __,0__ from the MATCH call.

At this point, it becomes tricky. If you have different customers on different rows in a summary worksheet, and customer names would be in column B, then if C5 were the active cell, define this name.

    CWSindex:  =MATCH($B5,CWSList,0)

Note that __$B5__ is column-absolute but row-relative. Then create the following monster defined names.

    CWSref01:  =CHOOSE(CWSindex,Customer001!$1:$1048576,Customer002!$1:$1048576,Customer003!$1:$1048576,Customer004!$1:$1048576,Customer005!$1:$1048576,Customer006!$1:$1048576,Customer007!$1:$1048576,Customer008!$1:$1048576,Customer009!$1:$1048576,Customer010!$1:$1048576)
    CWSref02:  =CHOOSE(CWSindex,Customer011!$1:$1048576,Customer012!$1:$1048576,Customer013!$1:$1048576,Customer014!$1:$1048576,Customer015!$1:$1048576,Customer016!$1:$1048576,Customer017!$1:$1048576,Customer018!$1:$1048576,Customer019!$1:$1048576,Customer020!$1:$1048576)

and so on. Then

    CWSref:  =CHOOSE(ROUNDUP(CWSindex/10,0),CWSref01,CWSref02,CWSref03,CWSref04,CWSref05,CWSref06,CWSref07,CWSref08,CWSref09,CWSref10)

On any given row, CWSref would then refer to the entire customer worksheet. You could use that to refer to particular ranges using INDEX and range expressions. For example, to calculate the average of C5 to the last nonblank row in column C,

    =AVERAGE(INDEX(CWSref,5,3):INDEX(CWSref,4+MATCH(2,1/NOT(ISBLANK(INDEX(CWSref,5,3):INDEX(CWSref,1048576,3))))))

Yes, long formulas, but these formulas will recalc only when data in customer worksheets change, and they may recalc just as fast.
-------------
That said, you may be better off using a database in which to store individual customer data, then using queries to get what you need.
