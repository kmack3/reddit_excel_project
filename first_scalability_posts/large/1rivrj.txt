large
1rivrj
Need to find specific strings of data in a large file

Hello.  I'm an inexperienced Excel user here.  Any advice would be much appreciated.  

I have a file of 640,000 numbers... One each in A1 through A640000.  I need help finding 2 specific patterns.  1)  Where does the longest string of zeros start?   And 2) Where does the longest string of non-zeros start?

For example, if I was working with a file of only these 5 numbers in A1 through A5 (1,0,0,3,5), my answers would be 1) A2 and 2) A4.

My limited Excel knowledge is failing me.  Thanks in advance!


-------------
Use VBA.

Step backwards through your range (since you are looking for the start)   
At each step, ask the question "is this value a 0?"  
When you have that answer, compare the length of your current streak to the length of the maximum streak for the same value.  
If it is a new maximum streak, update the maximum length, and maximum length start.   
If not, keep going.  

-------------
If you don't mind adding two columns and would rather use formulas, set it up like this:  

In columns A, B, and C: Result | 0 Streak | Non-0 Streak (The data needs to start in row 2 for this to work. I'm not perfect).

In B2 enter this and paste it down the column: =IF($A2=0,SUM(B1,1),0)  
In C2 enter this and paste it down the column: =IF($A2<>0,SUM(C1,1),0)  

To find the start of the longest 0 streak enter this in any column:  
=MATCH(MAX($B:$B),$B:$B,0)-MAX($B:$B)+1  
Longest Non-0 Streak:  
=MATCH(MAX($C:$C),$C:$C,0)-MAX($C:$C)+1  

Here are all of the relevant data points and their formulas:  

Longest 0 run:  
-Start: =MATCH(MAX($B:$B),$B:$B,0)-MAX($B:$B)+1  
-End: =MATCH(MAX($B:$B),$B:$B,0)  
-Length: =MAX($B:$B)  

Longest Non-0 run:  
-Start: =MATCH(MAX($C:$C),$C:$C,0)-MAX($C:$C)+1  
-End: =MATCH(MAX($C:$C),$C:$C,0)  
-Length: =MAX($C:$C)  

Here's a screenshot of what I came up with: http://i.imgur.com/GEkRxZI.png  
-------------
You can use conditional formatting and visually look at the series. Conditionally set any "0" value to fill with green, not-zero to fill with red.

Otherwise, I would face this challenge using VBA and a script which would capture range lengths into a separate sheet. You say you're inexperienced, this is certainly a task for someone with some knowledge of VBA!
-------------
I felt like implementing the suggestion by /u/tehhowch :
  

    Sub get_streak()
    
    last = Cells(Rows.Count, "A").End(xlUp).Row
    Set rng = Range("A1:A" & last) 'why did i put this here? not needed
    For i = last To 1 Step -1
        If Range("A" & i).Value = 0 Then
            zeroStreak = zeroStreak + 1
            otherStreak = 0
            If zeroStreak > maxzeroStreak Then
                maxzeroStreak = zeroStreak
                Set zeroStartRng = Range("A" & i)
            End If
        Else
            otherStreak = otherStreak + 1
            zeroStreak = 0
            If otherStreak > maxotherStreak Then
                maxotherStreak = otherStreak
                Set otherStartRng = Range("A" & i)
            End If
        End If
    Next
    MsgBox "Max Zero streak = " & maxzeroStreak & " @ " & zeroStartRng.Address
    MsgBox "Max non-zero streak = " & maxotherStreak & " @ " & otherStartRng.Address
    
    End Sub

-------------
I agree with wuzizname,throw in some conditional formatting for make it more obvious.

For actual calculations - here we go!
I put the random data of numbers in column A (so you can picture it better)
I threw in the number of the row in column D to keep track of the order of the data. You'll probably have some dates or something else chronological to make sense of.

Starting in B2,  =a2=0. 
Starting in C3, =if(E3=TRUE,F2+1,0)
I just manually typed in the first answer for A1, it's been too long of a day to add in that quirk to the formula.

From there, you can set a =max(C:C) to get the location of the biggest streak.

=vlookup(max(C:C),C:D,2,FALSE)-max(C:C) will give you beginning of the largest streak of zeroes.

Note - this will apply to the first instance of the max length of zeroes, so if there are multiple, you'll have to work around that bit.

Hope that helps!
-------------
Thanks a ton.  I'll find some VBA tutorials.
-------------
Did this (see my other comment).  I'd be interested if you would have structured it differently.
-------------
Super helpful.  Thanks.

-------------
Thanks for the help!
-------------
You make a minimum of 640,000 calls to the sheet in the OP's situation, which is bad - It can be done with exactly 1.  

I left out explicit code since it seemed OP is a student, but the general structure is in line with my earlier post.
-------------
I'm still fuzzy on a lot of the finer points, which is why I'd love to pick your brain. Would a For-Each loop make just one call to the sheet?
-------------
1. Generate 10k test values  
2. place a `dStartTime=Timer` line at the beginning of your code
3. place a `Debug.Print Timer-dStartTime` line after your `Next` line
4. Execute your code and note the time

Then, replace your code with the following:

    myArr = ActiveSheet.UsedRange.Value
    for i = ubound(myArr, 1) to 1 step -1
        if myArr(i, 1) = 0 then
            zStreak = zStreak + 1
            oStreak = 0
            if zStreak >= mzStreak then
                mzStreak = zStreak
                zStart = "A" & i
            end if
        else

the rest of the program should be intuitive - note that .Address will be unnecessary.
Execute, and compare.
-------------
I learned at least three new things from this.  Thank you!
