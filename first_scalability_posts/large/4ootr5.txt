large
4ootr5
Help needed automating a "brute force" calculation with a large range of variables.

http://imgur.com/TaYpa0A

The screen shot shows the spread sheet I am looking at, the highlighted columns are the two that need to be varied. They control a much larger and complex calculation written into the macros running to calculate the graph amongst other things. 
The aim is to find the gate angles (given in degrees in the left column) and the lift factors (0-1.3 given in the right column) that produce the shortest time given at the bottom in cell J44. 

when setting up the programme the optimum gate angle can generally be guessed within 10 degrees, giving only 10 variables, and lift factors calculated generally in steps of 0.025 between 0.1 and 1.3.

Would it be possible to create a programme to run through the variables in the two columns to find the shortest time?
This is a problem that would be worth some money to me if there is a solution.


-------------
It sounds like you need to use the solver add-in (Excel options, add-ins, and look for solver).  Once you have it enabled, it's in the data ribbon under analysis.  I won't go into details on how to use it (I'm sure there's tutorials out there that would do a far better job than I could), but the gist is that you set specific cells as variable (you can specify limitations, such as >0, within a range, etc.), and then a target solve to solve, either for the max or min or equal to a specific target, and it brute forces the variables for you.  It has a potential weakness where it will find you a [local maxima or minima](https://en.wikipedia.org/wiki/Maxima_and_minima) instead of a global, but if you've already got it narrowed down to a range where you know the answer will be, that helps.
-------------
If you only have 11 angle values and 49 lift factors, you could set up an 11 column by 49 row what-if table and use that to calculate all the time values. Unlike Solver, a what-if table would show multiple optimum values.
-------------
Yeah, I would use Solver as fireballx77 mentioned, assuming this is something you don't need a macro for (so your final result is an input to the macro you have, not an output). It's easy enough to play around with and use.

If that doesn't work, you can also just write a macro to brute force things in a giant nested for loop: loop all angle and all lifts (so it would be 20 levels deep).
-------------
Ok thanks for the input had a very brief look at it but not long enough. I'm not entirely sure how you set the output up as an input to the right macro, but definitely worth a look. 

-------------
> sensitivity analysis

This is the correct approach.  If OP's math has any non-linearity, then he will have to use the GRG non-linear engine which stops when a local optimum is achieved.  If OP's initial conditions are not seeded towards the global optimum, the final result will not be globally complete.




-------------
Ah right, so that would solve one sector at a time. Would there be any way of setting it running to calculate the entire table in one go? This will probably take a few hours to find the optimum total line. But that is OK. 
-------------
As much as I love Solver and linear programming, I'm concerned that the free license of Solver that comes with Excel may not be enough for your calculation.  [There's a variable and constraint limit](http://www.solver.com/standard-excel-solver-dealing-problem-size-limits) that you should be aware of.  

IMO, /u/hrlngrv provides the best solution: I believe you would be better served with a [sensitivity analysis](https://support.office.com/en-us/article/Calculate-multiple-results-by-using-a-data-table-e95e2487-6ca6-4413-ad12-77542a5ea50b?ui=en-US&rs=en-US&ad=US&fromAR=1).

[However, you should still learn to use Solver, including its VBA functions.](https://msdn.microsoft.com/en-us/library/office/ff196600.aspx)
-------------
You mention macros and programmes calculating the answer/graphs. I'm assuming these are subroutines in a VBA module? 


-------------
Yeah, I think I came across that when I tried solver briefly. I only had a few minutes at the time and tried one set variations for a gate angle and it didn't get anywhere but threw up a error message that I can't remember right now. 
-------------
Yeah they are, there are many of them designed by someone far cleverer than myself so I can't quite explain them, other than when the "Launch the sim" button is pressed it calculates the optimum line around the track based on the gate angles and lift factors inputted by the user. So these are the only two columns that need to be varied. 
-------------
The original VBA might be currently a bit beyond your expertise, but if you're willing to put some work in, there's lots of info on the web to help you.

The current code runs once, and creates output once. What you need to do is create the 11x49 data table on a new "data" worksheet, and modify the current code to be a subroutine that is called 11x49 times, and outputs 11x49 times, using inputs from the new data worksheet. 

Let's assume that your current worksheet, which I will call "Sim", can act as a template. That is, you can copy it, input data into the copied sheet, and run the calculations. Therefore "Sim" can act as a worksheet template for the multiple data inputs.

So, when the modified "Launch the sim" button gets pushed, the following pseudo-code launches:

    For i = 1 to 11
        For j = 1 to 49

            ' Next line uses worksheet("Sim") as a template
            copy worksheet("Sim) to new workbook("Sim_Output_i_j")

            ' Now copy the input data into the new workbook
            copy worksheet("data").cell(i,j).value to new workbook("Sim_Output_i_j")
            call original_launch_the_sim_subroutine
            save and close this new workbook

        Next j
    Next i 

Hope this helps...
-------------
Thank you  for your putting out a solution, it's much appreciated, I haven't had a chance to test it yet but I will have a go and get back to you as soon as possible! 
-------------
I don't know what your VBA skill level is, so hopefully you understand that what I posted is only pseudo-code. I don't know the details of your actual code to post a specific solution.
-------------
My vba level is very basic, but I will have a look into it, I could pm you a link to the actual excel sheet so you could have a proper look at the problem. I know just explaining with a picture might not get all the way there. 
