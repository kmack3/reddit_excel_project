large
3fdelu
Scan through a large worksheet and copy only rows that meet a certain criteria into another worksheet

I have a workbook where Sheet 1 is about 14,000 rows and 19 columns. I'd like to be able to somehow scan through all of that, and any row where the number in column K, M, O, Q, or S is less than the number in column J, have that entire row duplicate in Sheet 2. If J is less than all those other columns, skip that row and move on to the next.

I'll be dealing with this report weekly. Number of rows will always change, but will almost definitely be over 10,000 every week. On any given week I estimate less than 500 will meet this criteria.


-------------
I would add a dummy column and then use the if and or functions to determine if that row meets the criteria. Filter for all those rows and copy paste.
-------------
This will do it for you, and will append the copied rows to Sheet 2. If you just want to replace the data on Sheet 2, there are a couple lines to comment out/in.

	Sub Sub_Movem()
	' any row where the number in column K, M, O, Q, or S is less than the number in column J
	Dim LR As Long              ' Last Row of Data
	Dim LC As Long              ' Last Column of Data
	Dim Calc_Arr() As Variant   ' Array of numbers to evaluate
	Dim SrcWS As Worksheet      ' Source Worksheet
	Dim DestWS As Worksheet     ' Destination Worksheet
	Dim i As Long               ' Count variable
	Dim Str As String           ' String to hold the list of rows to copy
	Dim LRDest As Long          ' Last row in Destination Worksheet

	Set SrcWS = ThisWorkbook.Sheets("Sheet1")
	Set DestWS = ThisWorkbook.Sheets("Sheet2")

	LR = SrcWS.Cells(Rows.Count, "J").End(xlUp).Row
	LC = SrcWS.Cells(1, Columns.Count).End(xlToLeft).Column


	' Uncomment the following line to clear the Destination Worksheet of data
	' DestWS.UsedRange.Clear

	' Comment out this line if clearing all data in Destination worksheet
	LRDest = DestWS.Cells(Rows.Count, "J").End(xlUp).Row


	Calc_Arr = Range("J2:S" & LR)
	'1 = J, 2 = K, 4 = M, 6 = O, 8 = Q, 10 = S
		For i = 1 To (LR - 1)
			If (Calc_Arr(i, 1) - Calc_Arr(i, 2) > 0) _
			   Or (Calc_Arr(i, 1) - Calc_Arr(i, 4) > 0) _
			   Or (Calc_Arr(i, 1) - Calc_Arr(i, 6) > 0) _
			   Or (Calc_Arr(i, 1) - Calc_Arr(i, 8) > 0) _
			   Or (Calc_Arr(i, 1) - Calc_Arr(i, 10) > 0) Then
					Str = Str & "A" & i & ", "
			End If
		Next i
	If Not Str = "" Then
		Str = Trim(Str)
		Str = Left(Str, Len(Str) - 1)
		
		' Comment out this line if replacing all data in destination worksheet
		Range(Str).EntireRow.Copy Destination:=DestWS.Range("A" & LRDest + 1)
		
		' Uncomment this line if replacing all data in Destination worksheet
	'    Range(Str).EntireRow.Copy Destination:=DestWS.Range("A1")

	End If
	Set SrcWS = Nothing
	Set DestWS = Nothing
	End Sub

-------------

Hi!

You have not responded in the last 24 hours.

**If your question has been answered, please change the flair to "solved" to 
keep the sub tidy!**

Please reply to the most helpful with the words **Solution Verified** to do so!

See side-bar for more details.   If no response from you is given within the next 3 days, this post will be marked as abandoned. 

*I am a bot, please message /r/excel mods if you have any questions.*

-------------
Thanks that's a good idea. I'm going to see if I can get the code that /u/fuzzius_navus provided below to work, but if not then I will definitely go this route and just record it as a macro.
-------------
Sorry for taking so long to respond...very busy weekend. This looks exactly like the sort of thing I was envisioning.

Stupid question: How do I actually implement this? 

I've tried a couple of approaches and none have worked. I've tried adding the code as a module to the overall workbook and directly to Sheet 2. In both cases when I hit run nothing happens. I've also tried adding it as a module to Sheet 1 in which case I get the error "Application-defined or oject-defined error."

I also tried adding it as a module to PERSONAL.XLSB and running it like a macro. At first I was getting an out of range error, so I took out ThisWorkbook from lines 12 and 13. After that I didn't get an error when trying to run it, but still nothing happened.

*Quick Note: In the actual workbook the sheet names aren't actually Sheet 1 and Sheet 2, they are "Main" and "Action Items." I changed the code to the following to reflect that...*

    Set SrcWS = ThisWorkbook.Sheets("Main")
    Set DestWS = ThisWorkbook.Sheets("Action Items")

*...Not sure if that was the right thing to do though?*


-------------
Just adding them to a module and changing the sheet names should be enough. I would step through the code using F8 to see what happens at different stages of the code.

My guess is that if nothing is happening nothing is meeting the criteria in the IF statement (line 15 in the code above). If it never gets to the line str = str then you probably don't have anything in your range that is less than J.

You can add a break at that line, or use a watch on the Array (Calc_Arr) and see what values show up in it, though I advise doing so in a small sample of data.
-------------
Open the VBA editor (ALT+F11) in the workbook that contains the data you want to process.

Click on the Insert menu and choose Module.

Paste in the code I provided.

The lines (12 and 13) that you removed are required for this to work. Changing to match your sheet names as you noted above is the correct way to do it. Putting it into a separate workbook (PERSONAL.XLSB) won't work unless you change it to ActiveWorkbook instead of ThisWorkbook.
-------------
Okay I followed those steps, changed the sheet names in lines 12 and 13 to match my actual sheet names ("Main" and "Action Items"), and then clicked the little play button in the VBE tool bar and I get the following error *Run-time error '1004': Method 'Range' of object '_Global' failed.* When I click Debug it highlights line 42: 

    Range(Str).EntireRow.Copy Destination:=DestWS.Range("A" & LRDest + 1)   

The worksheet Action Items is blank and this report will exist in a new workbook every week, so it doesn't matter if it clears that data or not, so I tried uncommenting lines 20 and 45, and commenting out lines 23 and 42 as per the commented instructions, but I still get the same error. In that case when I hit Debug, it highlights line 45:

    Range(Str).EntireRow.Copy Destination:=DestWS.Range("A1")
    
-------------
One line 40, paste in this code:

    DestWS.Range("A1").Value = Str
    Exit Sub

Copy and paste the values of A1 on your Action Items worksheet here.
-------------
No errors now, but all it's doing is printing a list of cell locations in the A column of the affected rows into cell A1 on the Action Items sheet *(A1, A2, A52, etc)*.

[Here's a screenshot](http://i.imgur.com/zVObBkA.png)

Plus many of the cells getting printed there don't actually make any sense. For instance A2 shows up there. In row 2 in the Main sheet, colum J has a number but all the other columns the code is checking for are blank. (Sorry, I forgot to mention in the OP that there would be blanks). However row 3 is the exact same situation but A3 does not get printed here. The next one that shows up is A52. In row 52 column O has a number, but all others are blank, including J, the one we're testing against. But row 54 follows a similar pattern where K has a number but all others are blank (including J), but A54 does not get printed here. 

If you want to keep hacking at this I'm down to keep trying new suggestions, but I know I've already taken up a lot of your time, and if you don't want to dive any further down this rabbit hole I totally understand. I could probably use a more low-tech solution like the one /u/Ryzon9 recommended until I get a better handle on VBA, which I'm obviously very new to.
-------------
!

I think I know what is happening here. Everything is displaced by one row.

So, the array starts counting at 1, but the range we are drawing data from starts at 2. So where the output says "A2", it should actually be "A3".

Change line 34 to the following:

                    Str = Str & "A" & i + 1 & ", "

I need to verify what happens to the values in the arrays when the source is blank so we can effectively exclude those rows.

To make sure I am approaching it correctly,

| J | K | M | O | Q | S |   EXPLANATION |
|---|---|---|---|---|---|---|
| 10 | 5 | 8 | 7 | 5 | 2 |  include, J is > |
| 1 | 12 | 60 | 27 | 41 | 2 | Exclude, all > than J |
| 5 |   |   |   |   |   | Ignore, all other values blank |
|   | 2 | 5 | 6 | 7 | 9 | Ignore, J is blank |
| 42 |   | 7 | 43 |   | 4 | ????? |

What do we do with the last row? Are my other assumptions correct?
-------------
Do you need help setting up the dummy column?
-------------
Last row we'd want to include because at least one of the {KMOQS} values is less than J. If they're all blank and/or greater we exclude the row, but if any single one of those five values is less than J, we want the whole row.

I made the change in the code and it did change the output on the Action Items sheet. It's now ignoring rows where J is blank, which is good, but it's showing any row where at least any one of the {KMOQS} set is blank. I guess it's just treating blanks as zeros?


-------------
No thanks, I was able to set that up okay. I'm going to keep going toward the VBA method as long as /u/fuzzius_navus wants to keep going though because I really want to get a better handle on VBA. Thanks for the offer though!
-------------
Revised.

    Sub Sub_Movem()
    ' any row where the number in column K, M, O, Q, or S is less than the number in column J
    Dim LR As Long              ' Last Row of Data
    Dim Calc_Arr() As Variant   ' Array of numbers to evaluate
    Dim SrcWS As Worksheet      ' Source Worksheet
    Dim DestWS As Worksheet     ' Destination Worksheet
    Dim i As Long               ' Count variable
    Dim Str As String           ' String to hold the list of rows to copy
    Dim LRDest As Long          ' Last row in Destination Worksheet
    
    Set SrcWS = ThisWorkbook.Sheets("Main")
    Set DestWS = ThisWorkbook.Sheets("Action Items")
    
    LR = SrcWS.Cells(Rows.Count, "J").End(xlUp).Row
    
    
    ' Uncomment the following line to clear the Destination Worksheet of data
     DestWS.UsedRange.Clear
    
    ' Populate the array from the worksheet
    Calc_Arr = Range("J2:S" & LR)
    '1 = J, 2 = K, 4 = M, 6 = O, 8 = Q, 10 = S
        For i = 1 To (LR - 1)
        
            ' Check if J is empty or K to S inclusive are empty
            If Not IsEmpty(Arr(i, 1)) _
            And Not (IsEmpty(Arr(i, 2)) And IsEmpty(Arr(i, 4)) And IsEmpty(Arr(i, 6)) _
            And IsEmpty(Arr(i, 8)) And IsEmpty(Arr(i, 10))) Then
            
                ' Check if J is the largest number
                If Arr(i, 1) > Application.Max(Arr(i, 2), Arr(1, 4), Arr(i, 6), Arr(i, 8), Arr(i, 10)) Then
                        Str = Str & "A" & i + 1 & ", "
                End If
            End If
        Next i
    ' If Str is empty/blank then there were no rows found
    If Not Str = "" Then
        ' Remove the hanging space
        Str = Trim(Str)
        ' Remove the hanging ","
        Str = Left(Str, Len(Str) - 1)
    
        ' Uncomment this line if replacing all data in Destination worksheet
        Range(Str).EntireRow.Copy
        DestWS.Range("A1").PasteSpecial xlPasteAll
    
    End If
    Set SrcWS = Nothing
    Set DestWS = Nothing
    End Sub

**Edit:** code was including column J in Max calculation. Would have failed because J is not > J
-------------
Now I'm getting *Complie error: Sub or Function not defined.* When I click OK it highlights line 1.
