big
4mgkar
Supercharged rig for heavy excel / access / power bi / future big data platform use

I'm about to procure a new machine at work and wanted to get thoughts from everyone as to how I can optimize my local machine as much as possible for heavy data usage. 

Most IT folks I ask seem to quickly jump to remote log in to a 16 core server portal or an instance in AWS for more computing power, but I would like to first optimize my local machine (and I'm sure there will be times I can't connect remotely and need to work) before I move to other alternatives.

Question is, what are the key hardware (cores, RAM, etc), software (64 bit excel, office add ins, etc), and / or other solutions that will reduce how often I stare at the calculating % bottom right in excel for an hour plus...

Pros and cons much appreciated.

Thanks in advance!


-------------
If you're spending that long waiting for Excel to recalc perhaps it's time to start exploring different solutions (python/pandas, R, matlab, etc).
-------------
Number of cores for formulas. Ssd drive for file load times.

But the biggest difference would be optimizing the formulas.

If you use VBA scripts, gigahertz because it can only use 1 core.
-------------
Don't neglect the network, a lot of data is passed using the scenario you propose which slows things down. Maybe you need a SQL server or a Linux db version? It's not always about hardware but understanding the whole picture.
-------------
Really, sometimes throwing computer power at a problem is not the answer. My favorite professor always said weeks of programing save hours of planning.

If you cannot speed it up with a current top of the line machine (nothing crazy, just like ssd, 16+gb ram, i5 or i7 from within the past few generations) then maybe you should rethink the code.

If you are doing hard core numerical stuff maybe see if you can use a gpu accelerated language or move to some other language. R is great for statistics, and really the fastest language for scientific computations (like atomistic modeling) is fortran.

On the other hand at a previous job I was given the task of optimizing some excel/access monstrosity that created risk reports and took 40+ min to run on my bad, company supplied desktop. Moving it to a computer with a ssd dramatically increased the speed because it made the database much faster.

I guess the questions are what are you trying to do and why is it taking so long? Is it VBA? Can you step through to see whats happening?
-------------
PCI 3 ssd will speed things up the most probably.
-------------
Specially if "calculating" formulas take over an hour.

Either things are that complex or the formulas are implemented super inefficiently. 

Find out what's the bottleneck. If it's simply that long, consider migrating.
-------------
Can you elaborate on the last point? Why is this true? 
-------------
My background is finance / banking / PE, so I've gotten away with pretty much all excel up to this point. 

I'm going more into Ops now and am working with much larger data sets (over 2m records x multiple datasets). I can use excel on multiple tabs to run multi factor sumifs to summarize data and then pivot off of the summary outputs, but my computer struggles to get it done.

I'm probably to the point that I need to learn access / R / Python, but just want to get some thoughts as to how I can optimize my machine so it is clear when I have to move out of excel.

Any good articles come to mind that illustrate best software / languages for various applications? R v. Python v. Access v. Fortran, etc.?
-------------
Why? Because that's how VBA is set up? There are ways to get it to run multiple cores but at that point you're often losing the reason to run VBA as opposed to another language 
-------------
VBA is very handy scripting language but it lacks the internal language tools needed for multiprocessing. This means it is limited to only one core. If you have another core, you can use other programs while VBA is processing, but 2 cores or 8 cores makes no improvement. Excel's formulas on the other hand are built on compiled C/C++ code and can use all available cores.

VBA also happens to be memory limited to 4GB (even in the 64bit version of excel). Like the cores, if you have lots of extra RAM you can smoothly use other programs without worrying about what VBA needs.

The slowest formulas in excel seem to be the lookup/match ones because it doesn't seem to be able to store the lookup table generated by the first cell to reuse for the next cell's lookup. Even with VBA's single core limitation, if can radically improve many-to-many lookups by creating a hash table using a built in collection object or the external system dictionary library.
-------------
If you're basically doing sumifs on massive data sets then I think the easiest transition for you would be a SQL DB. I've gotten into R but the learning curve was slightly steep to do the basic things your doing now and exporting back out. A SQL query on the data will give you the answers immediately. 

I dislike access but set up a basic access dB and you can write some queries in SQL back and forth
-------------
I don't think you need to mess with fortran unless you are doing calculations that loop over 1mm times. 

R would probably be the easiest way to analyze this and make graphs, or depending on what you are doing a database alone or with excel could help you. Either way make sure you have a ssd and lots of ram. 

sorry but I don't really have any good articles about this - I'm sure if you ask around at your company you can find someone that can help. 

How big are the files in GB?

Is the math difficult? Are there lots of calculations or just lots of data?

For instance, fortran is great for Monte Carlo simulations while R is great for doing anova or really any type of data analysis. 

Matlab could probably also work better but I was taught R (also R is free). 

Do you know how to program? Do you remember statistics? Maybe take an MBA level data analysis class and see if that helps if you don't already know how to program but remember statistics. 


Also, if you are at a large company, ask around if any quants or it people can help you. I'm sure someone can make your life simpler. 
