big
3pi3o0
Big file problems (x-post from r/vba)

Hi, so I have used some VBA in excel to print PDFs for closing our books. I used to do them manually and it took forever so I have them set up in a big macro to grab what I need and print it. Seems simple, but my issue is that the file sizes are massive and that makes the tasks of further combining them and emailing them to people very difficult. Before the size for the biggest pdf was 1,787 KB. After I used the macro is it 20,856 KB!

So, therefore, weird question but is there any way to make the files smaller?


-------------
Try saving the file as .xlsb - it will retain your macros, but ditch the XML that tends to float some files.
-------------
when you say print them and combine them are you trying to combine pdf's? - if so have a look at pdftk (find the server version not he flashy new gui one) - its a commandline tool that can split / combine rotate etc pdf's. 

is excel really the best tool for the job? 
-------------
How many pages are the PDF files? Does the Excel sheet have a lot of formatting on it?

I use a similar process for Financials, but we use Word in between for formatting and adding notes to financials. So, the Excel statements are copied over to Word files as linked tables (for future refreshes) and when they;re all set, I just save them as PDF (manually or via macro). The file size is usually around 1-2 MB for 12-15 pages.
-------------
I also do something similar, except I do the intermediate step of having a Word document set up with merge fields.  What happens in my code is that it opens the word document, links it to an Excel file, then "prints" the merge as a pdf file.  It will be one file with all the invoices, one invoice per page.  The second part extracts the invoices into separate files with the company name as the file.  The individual files sizes are roughly 100kb.  The code is below.  Let me know if you have any questions.  I apologize that the code is not very well commented.

--------------------PART 1

Private Sub cmdCreateInvoices_Click()
''''This code will open a word document that contains merge fields, link it to an Excel file to get data from, and then save the results of the merge into a single file.  So if you had 200 rows of invoice data in Excel, you'd get a 200 page pdf file
''''

Dim sPathFileTemplate As String

sPathFileTemplate = "C:\temp\TestFile.doc"  'this is a word document that contains merge fields that we will get from the active workbook below.

Dim wrdApp As Word.Application

Set wrdApp = New Word.Application

' setup the template invoice document

Dim doc As Word.Document

Set doc = wrdApp.Documents.Add(sPathFileTemplate)

wrdApp.Visible = False


Dim sIn As String

sIn = ActiveWorkbook.FullName 'The active Workbook is set as the merge data source

' open the MERGE

With doc.MailMerge

.OpenDataSource Name:=sIn, ReadOnly:=True, SQLStatement:="SELECT * FROM `90$`"

.SuppressBlankLines = True

With .DataSource

.FirstRecord = wdDefaultFirstRecord

.LastRecord = wdDefaultLastRecord

End With

.Execute Pause:=False

End With


Dim s As String

s = "C:\temp\Output.pdf" 'this is the single pdf file that will be created with all the invoices in it

wrdApp.Application.Options.SaveInterval = False

wrdApp.Application.ActiveDocument.ExportAsFixedFormat OutputFileName:=s, _

ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:=wdExportOptimizeForPrint, _

Range:=wdExportAllDocument, FROM:=1, To:=1, Item:=wdExportDocumentContent, IncludeDocProps:=True, _

KeepIRM:=True, CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _

BitmapMissingFonts:=True, UseISO19005_1:=False


doc.Close False

Set doc = Nothing

wrdApp.Quit False

Set wrdApp = Nothing

MsgBox "Done"

End Sub


-----------------------------------PART 2

Private Sub cmdFastExtract_Click()

''''This code will open the pdf file created in the previous sub and extract each page and save it as the company's name.
''''


Dim companyName As String

Dim companyCount As Integer

Dim folderPath As String

Dim fullPastedName As String

Dim i As Integer

Dim PDDoc As Acrobat.CAcroPDDoc, newPDF As Acrobat.CAcroPDDoc

Dim PDPage As Acrobat.CAcroPDPage

Dim thePDF As String

Dim Result


thePDF = "C:\temp\Output.pdf"

Set PDDoc = CreateObject("AcroExch.pdDoc")

Result = PDDoc.Open(thePDF)

companyCount = (ActiveWorkbook.Sheets("90").Range("A:A").Cells.SpecialCells(xlCellTypeConstants).Count) - 1 'Counts the number of invoices you will be creating.  Replace 90 with your sheet name and A:A with a column that doesn't have any blank cells.


For i = 1 To companyCount

companyName = ActiveWorkbook.Sheets("90").Range("B" & CStr(i + 1)).Text 'Replace 90 with the name of the sheet you're pulling data from, and replace B with the column that your company names are in.

folderPath = "C:\temp\invoices\"

fullPastedName = folderPath & "\" & companyName & ".pdf"

Set newPDF = CreateObject("AcroExch.pdDoc")

newPDF.Create

newPDF.InsertPages -1, PDDoc, i - 1, 1, 0

newPDF.Save 1, fullPastedName

newPDF.Close

Set newPDF = Nothing

Next i

MsgBox "Done!"

End Sub
-------------
If OP is in corporate environment, he will most likely have to rely on MS Office tools.
-------------
We use excel to prepare financial statements and "print" them to pdf to email to people so they look better than sending them excel files.
-------------
glorious thing is the handy little program doesnt require admin privilige to use / install - just copy it to C:\temp (unrestricted read/write) and away you go. - not that it would help OP in this instance
-------------
ah, fair enough. does your macro set a giant print area - check what the last active cell on each of your sheets is, if its way beyond your actual data thats probably where your bloat is. 
