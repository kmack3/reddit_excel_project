You Know your good at Excel when......?
Answering questions on here helps me think that I actually know what I'm doing.  

Then seeing other people's answers reminds me that I have absolutely no idea what I'm doing sometimes.

Generally, the more I learn and know, the more that I learn I don't know. I'm really good at the parts of Excel I actually use, but I know there are so many other facets that I never really touch.
I learned I was an anti-excel ninja when my roommate introduced me to Pivot Tables, which in 20 seconds could do the same thing I had just spent 40 minutes programming in VBA to achieve...

That was also when I learned that just because you know how to program does not mean that programming something yourself should be your first choice :)
It's not about what I can do, but when random people in my company I've never heard of come asking for help.
Have an older family friend that was working on a project for her company. Project was to navigate to a website, look up 7-8 data points on the page and type these into excel. The problem was there were 125,000 web pages, and yes she was doing it manually. 


Told her I would take a look at it, but I could tell she didn't have high expectations because I mean to most people what good is excel in getting information from the web? With a *lot* of help from stack overflow, I was able to build a very basic web scraper that hit about 7 pages a second. it still took well over 5 hours to run, but when I handed the file back to her a few days later she was blown away.


I don't feel like an excel "ninja" per say, but at that point I realized that between what knowledge I do have and what's out there on the internet, I can do some pretty cool stuff.
The length of my keyboard shortcuts have reached preposterous lengths.  Among people I work with, my shortcut F5-Tab-Tab-Enter-F-U-G-X-Enter has become an inside joke.

(it highlights all the cells containing a formula error)
When you think this is funny:

* Private Sub Workbook_Open()
* Application.DisplayAlerts = False
* Application.Quit
* End Sub
Simulate the motion of all the planets in real time.
When I found myself responsible for automating the reporting outfit of a Fortune 500 company. I produce probably up to 200++ reports an hour the real issue for me is not Excel but in system resources (i.e. computing power) - I have a resource group of technicians who prepare data for consumption via automation - from there it really comes down to how much time it takes to cycle through all of the jobs. The Excel Ninja or "Perfect Moment" for me is whenever my OCD finally pays off and I'm able to utilize VBA collections across multiple items. The big problem I'm currently experiencing is trying to make myself not important (which is an issue I take very seriously) when you find yourself important the small things such as career advancement and extended vacations become the obstacles you must overcome with the label of "The Excel Guy/Girl". But I agree the more you learn about Excel the less you know - especially after watching everyone over at Excel.TV I've really been inspired in creating a voice in the community so that I can start campaigning for an Excel MVP (Most Valuable Professional). I'm in the midst of starting my own Excel blog with only a couple lessons up thus far - [It's Not About The Cell](http://itsnotaboutthecell.com/) - I'm not interested in selling templates or bogging people down with the same ole same ole - but more in challenging people to think outside the application.
When I was able to take a report that required tons of copying and pasting, and modify it so that the whole thing would refresh, save as values only, and email a copy to our distribution list with the pertinent information in the subject line all with a single click. This is probably beginner level VBA for a lot of people in this forum, but it made me look like a rock star at work. No more sending emails with the wrong subject line, managing tedious Outlook templates, or sending from the wrong mailbox on accident. Everything is streamlined and consistent now.
Coding fun games in vba  like pong, breakout and space invaders
A true expert in Excel never throws their hands up and says "that's impossible". There may be a good trick using formulas. Or you cab write your own in VBA. VBA not powerful enough? You can have VBA call a command line script.
Power Pivot, Pivot Query & SSAS Cubes = ninja Excel.  VBA is oldddd!
When apparently efficient macros take multiple minutes to complete due to the amount of data you're working with (and amount of time you are saving!)
when the dinky workbook i made because i was bored is going to be globally released later this week as a major time saving initiative o.0
You know you are good at Excel When **You are good at Excel**...
[deleted]
When do you learn if your good at English?
A major factor for me is when I can pseudocode what I want to do, then convert the pseudo into working code with minimal steps.  Small chunks of code are written direct, but for a major application, always start with pseudocode because it is closer to the way your mind works.  It took several years to get really good at writing pseudocode.
[deleted]
I totally agree that the more you know the more you realise that you don't know.  I just wish that i could be better at VBA. If you are really good you can basically automate any process!

Exactly what do pivot tables do so easily?
Pivot tables changed my life hahaha!!!
Exactly! Programming is about making life easier and that's it. If something can be done quicker without it then you shouldn't be programming it.
Now generate a pivot table using VBA.
>  when random people in my company I've never heard of come asking for help.

I've kinda really wanted to become that guy at my office because I love answering questions (200+ on here alone) and it'll help out a company that I really enjoy and want to see be successful. But, at the same time, I'm afraid that once word gets out, I won't be able to do my regular job as I'll be too busy answering other peoples' questions.
When I visit my girlfriend at her job, some of her colleagues ask me for help with excel... :)

I am not claiming to be good at excel in relative terms. But once i managed to save a colleagues 2 hours of work per day with an index match formula. Do you not have any particular occasion that stands out??
Funny how that spreads.  Somewhere along the line I became an 'Excel Guru', and that rumor spread.  I am nothing close to an Excel Guru, but the vast lack of Excel capability makes me look like one.
I would love to know how to get excel to extract data from websites. where did you guys read about doing it??

haha... hardcore!!

That's the longest keyboard shortcut ever.
    Private Sub Workbook_Open()
    MsgBox "Hello " & Application.UserName
    MsgBox "Goodbye " & Application.UserName
    Application.DisplayAlerts = False
    Application.Quit
    End Sub

Oh *Gawd*.
Could you please share that workbook? I am looking for this EXACT functionality within Excel. How does it work? Do you actually chart out the different planets locations? This is unbelievable!
how do you take the first steps in getting to this point in vba. I am currently using it to copy and paste and delete rows and stuff but as soon as it gets past that i feel out of my depth. really keen to learn more but i am struggling

Something I've learned about VBA is that when you don't know how to do something, it can take hours, days, weeks to read up on it, try to write it or find a working procedure from StackOverflow to copy it, debug it, and implement it.
 
The *second* time you need it? Minutes. Such was my experience like yours with refreshing, pasting as values, saving as new, attaching to email, sending, etc.
that last thing...tell me how to that last thing
Oh how insightful! Thanks for your input
Excel Expert (which I think is worthwhile) only covers Excel, it doesn't touch on VBA. Also for Option Explicit I just tick the ticky box :)


[deleted]
Had a guy apply to a job with us and listed on his resume "Advanced Excel". We wanted to be sure, so we gave him a small project to work on. We basically had to do the whole thing for him, including summing an entire column...
Knowing how to use "your" and "you're" properly would be a start.
I'm not sure what makes pseudocode good or bad...  Or sounds like you just learned when "do the things" was black boxing a problem you don't really know how to solve versus representing an actual feature of the language.
> there isn't much more for you to learn

I think this sub would disagree with you.
[deleted]
Insanely easy data manipulation. You have a table, and this table has a bunch of data. With a couple seconds of dragging and dropping, you can find all sorts of information about that data. And if you need a chart of your data, Excel's Pivot Charts actually operate a TON easier than their regular charts. It's an extremely powerful feature.
pivot tables summarise data. that can tell you just about anything that you would like to know about large datasets. counts sums or averages of any field. I highly advise you read into them. if you do any data analysis they can make your life a whole lot easier.

check this out. https://www.youtube.com/watch?v=w9G1AMj__1M

Good question. I've thought about that a while ago and my answer is: Pivot table is a way of visually using SQL, without having to know SQL. 

It would take you a lot of effort (in terms of hours put into learning) to create the same output a person can easily create in a Pivot Table. It is definitely Excel's most powerful asset. I've heard good things about slicers too, but I haven't played with them myself yet.

Say you do replicate the output of the Pivot Table. Can you make it look nice? one click and you have a nice looking display of your data. Chart it? Awesome, here it is. PTs are awesome.


Like others have said, it makes manipulation of big tables a lot easier. I'm no expert on them.

In my particular case I had about 15000 entries of mining accidents in my state in the early 20th century and wanted to see if there was systematic discrimination against people with hispanic last names. This involved a lot of interrelated variables (eg Is the likelihood of death for Hispanics involved in accidents vastly different at different mines?). Building a tool in VBA from scratch that would do that was a lot harder than using a pivot table.
yeh i suck at that!!

You could make that your job. The company I work for employs two, what they call, Automation Engineers, and the entire job is answering Excel questions and doing VBA and SQL.
I am that guy. It's not bad. At my office, at least, the questions are usually fairly simple and my helping them for 5 minutes will save them probably hours of either trying to figure it out on their own, or giving up and doing it by hand.
First of all i would like to say kudos for the 227 clippy points. I post regularly and the assistance i get from redditors like you is beyond appreciated!

 I am gradually becoming 'that guy' in the office although it decreases my productivity. Despite this i feel that teaching complete noobs to use if functions and vlookups is of massive net benefit to the company. Over their careers it saves hundreds of hours. My advice would be don't be afraid the knowledge that you have. i have found it empowering as people really appreciate it
I got introduced to it by googling "VBA internet explorer automation." Basically you loop through elements to click links and buttons, and search through the HTML code to extract data. 
Ah haaaa

This guy gets it.
> Private Sub Workbook_Open()  
> Application.Speech.Speak "Hello " & Application.UserName  
> Application.Speech.Speak "Goodbye " & Application.UserName  
> Application.DisplayAlerts = False  
> Application.Quit  
> End Sub

If someone were to do this to me, how would I fix it? Find the personal macro excel files (wherever they are) and delete it there?
This site has quite a few interesting sheets. I believe this is what you are looking for.


http://excelunusual.com/a-legacy-3d-octal-planetary-model/
Record macros, and understand and manipulate the resulting code. While you're doing that, get comfortable with the basics of programming - loops and conditionals. Then figure out the things specific to object oriented programming - parent and child objects, collectors, methods, and properties.

Meanwhile, google, and maybe ask a question or two here or on another forum.
I start by researching solutions for a problem that I have, and "reverse engineering" the code to understand it and adapt it to my workbook. There's a lot of VBA resources available in the sidebar of this sub. I've also taken the time to save samples of VBA code when I use them so that I can go back and refer to them later if needed.

Then, it all comes down to practice. I actually find myself trying to find ways to optimize my spreadsheets even further in order to challenge myself. Lately I've been using this subreddit for practice. Even if a question is already answered, sometimes I will take a crack at it to see if I can come up with a solution.
As most others have said, macro recorder works wonders when you are learning.  Make sure you understand what is happening and why.  Also, learn loops!  "For each... Next" loops are great.  Also, if possible, take a programming course of some sort.  I did some coursework in C++ and a bit of FORTRAN (\*groan\*) before touching VBA.  One problem with learning VBA is that it is used by a lot of non-programmers, so you might see advice online that doesn't follow good coding practices.  (Run far away from goto, generally).
I guess i need to start using it when i don't strictly need to just to help me get more comfortable with the code.
[deleted]
it's pretty much:

dotproduct(a,b) , as far as I know [vector notation]

Or A * B^T where A and B are 1 x N matrices [with matrices]

Or Sum ( a_i * b_i)   from i to N [index notation / indicial notation]
It's hard for me to explain without drawing it out - and my description there defiantly makes it sound more fancy than it really is but something like this:

Each condition (array) in sumproduct creates a binary column range according to the condition perimeter.  There can be up to 26 conditions (I think), all essentially columns of binaries, + a sum column.  What this leaves you with is a large grid of 1's & 0's that are multiplied across, eventually multiplying the Sum number by 1 or 0.  This allows you to basically filter out all Sums that do not meet all the array criteria you define.  
Sadly I think that counts as Advanced Excel. Basic Excel is finding the icon on the computer. I think it makes us Excel Gods - or higher!
I'm aware. Read op's title
80% of my code work is direct thinking through the steps to take and making them work.  20% is where pseudocode is useful.  It is where you structure a problem and map out the flow it should follow.  Knowing the excel/vba object model is important.  Knowing how to write good vba is important.  Writing good pseudocode is the critical design step that makes these things work.
Yeah it was a joke, and a bad one at that 
Why would Python be better than VBA for Excel usage?

I'm new to programming and am learning Python.  If I can easily apply python knowledge to help with my Excel tasks, I'd be very happy.
> I was told Python is the way to go in Excel if you really want to use Excel to its potential.


As much as I love Python, i believe Powerpivot is the way to go in Excel if you really want to use Excel to its potential. And unless you go outside Ms Office automation or have to analyze billions of data, there's no need to replace VBA+Powerpivot.


That said, i notice that there are many excel users including me that attracted to programming career (especially Python) after doing some simple VBA projects.

With VB6 dead, and VB.NET help/tutorial in the web is not as many as C#, it only natural that we are attracted to Python which have similar programming keyword.

Mind you that although the language is similar, the environment, the community in Python World is so different with VBA world.





Slicers are the coolest thing since, well, sliced bread. 
Coolest. Job. Ever.
I want that job!!!
That sounds absolutely fantastic. I would absolutely love a position like that!
Yeah, for me, it's mostly help with vlookups, pivot tables, or simple formulas and formatting issues.  I'm probably average among /r/excel users, but I'm a pro among my co-workers.
That's exactly the mindset to have about it.    If I spend five minutes teaching someone how to do something, and it saves them an hour, unless I'm making 12x what they're making, it's still a net gain.

You could also see about offering Excel Classes,    

* Newb - This is Excel!  It's your friend!
* Beginner - Here's the basics of functions, and some useful ones (AVG, MIN, MAX, etc)
* Intermediate - VLookups, Pivots, Shortcut keys (take away their mice? :D ), more advanced functions
* VBA-1 - Show them how to access the editor, basic functionality, etc, etc...
* VBA-2 (small class) - You shatter their minds by showing them how to make the computer do the work for them.   Have them bring a process / Data to the class that they do at least daily, and walk them through the process of automating them...  Have them write down the process without referring to specific cells.. (instead of "get the value in A345" use "Get the total at the bottom of column A")    With that, you have a template for turning it directly into code.
Awesome! i will look into it

It's macros like these that make my username so fitting.
would this quit every excel window. or just the workbook that you open?
quite a funny way of pissing people offf haha

If you opened up a workbook and you saw a pop up that said "Hello [Your Name]", don't press the OK button on the pop up.  Open up VBE, click on the Workbook module on the left hand side and delete the code (assuming that the code is going to quit excel)
Thanks guys i have a new enthusiasm for VBA which i will take to work tomorrow. I am guna make this shit happen!!!
Thanks guys i have a new enthusiasm for VBA which i will take to work tomorrow. I am guna make this shit happen!!!
VBA is part of Excel in the same way Javascript is part of HTML. They are often used together, but not technically the same thing
1. The vector dot product includes summation, so you don't need the sum there, although technically it's not wrong...

2. SUMPRODUCT can handle more than two inputs, which extends it beyond your typical vector dot product/matrix multiplication.
I'll make sure I put that on my resume. "Excel God"

Actually, I just Google the VBA code I need. Maybe a demi-god...
Ohh. I get jokes! lol
Alright, as usual: "it depends". 


First off, I like VBA and it helped me a lot in my career. You can really make things work with it and save everyone time. That being said, for me, My problem with VBA is that not many people know it. The more you get into VBA, the more you will get into programming. After a while, you begin to kind of think about how things actually work and you continue to ask questions. If you are in this forum, participating in questions, it says a lot about your commitment to being awesome at learning more about things.


There is a steeper learning curve for Python/programming, but the outcome is beautiful when you actually get to see it. VBA was great inside Excel/Office, but there is a lot more to life than Excel. I love Excel, but it is important to know it is a tool to solve problems, not the end goal itself. 


One huge problem I had was that people (non-savvy users) could break my stuff immediately by disabling the macros. I hated that. After a while they learn though. That by itself is already a problem, at least it was for me.


You can do more things with Python/programming: you can scrape websites, you can create objects and later use them to do whatever you want (pdfs, reports, emails, charts). I found that it is a lot easier to find answers about python than it is to find answers about VBA... that's a huge plus. I like the idea of being able to show code to someone and they know what is happening. There is a lot of implicit stuff in Excel/VBA that can be hard to truly understand what is going on: referring to a cell for example: you may not know what is in there, it is hard to see the formula. In python, you would have had to write the formula out, there is no going around it. You can see everything the code is doing right there. Then, when things break or you want to add to the process, it is easier to do so.


Quick example of something cool done with Python:
- wrote a script to fetch data from a live google form. Once we have it, create a pdf with the data that was retrieved, for each of the entries (rows).


Don't mean to bore you to death here, but continue your path with programming. Python itself is also not the end result, it is also tool. A tool that can help you do pretty cool things, just like Excel can as well.
/r/LearnExcel has a list of tools for getting Excel and Python to work together. Reading the linked pages will help you to understand what's possible.

https://www.reddit.com/r/learnexcel/comments/2vzybr/tools_for_using_excel_and_python_together/
Am interested in response to this
Yeah that sounds awesome!
I'm trying to get this started at my work this summer, actually! I plan on having 3 "Lunch and Learn" sessions on Excel, teaching beginner, intermediate, and advanced functions. If it does end up happening, I'll probably make a post about it.
It's 2015 why are people still talking about VLookup's? Go Index/Match or go home.
It quits the entire excel program.  If all your workbooks that are open are in the same excel program then theyre all going to quit.  If you have any separate excel programs open then they'll stay open.
It would say Hello (UserName), Goodbye (UserName), then turn off alerts and completely exit out of excel. So no "Do you want to save __.xls?" before excel disappears.
I agree. An Excel expert should be able to solve complex problems using INDEX, MATCH, OFFSET, GETPIVOTDATA, and some dynamic ranges. A VBA expert should be able to code fairly complex programs, nicely divided in subroutines and functions, using arrays for handling lots of data. But I wouldn't assume an Excel expert is necessarily a VBA expert or vice versa. Basically because I didn't become an expert in both simultaneously.

If you look at the difference in the things posted to /r/vba and /r/excel it should be pretty clear.
If you call yourself an Excel expert (candidate stated they "knew" VBA but I didn't mention that) than VBA is fair game for questioning. At least in my line of work.  
TIL I have intermediate Excel skills. :/
Ha I forgot about that. 
Phrase put it on. Then post it here when you get your job
How did you go about learning python?? VBA as seemed like a natural progression for me. However python sounds fantastic. did you have a formal environment to learn or did you pick it up. If so how?

[deleted]
I have found VLOOKUPS much easier to teach to noobs. Plus a lot of people dont recognize the benefit for the extra thinking required. That being said for me vlookups are a thing of the past
I would say that i 'know VBA' but i copy most code of the web and edit it. I dont claim to be an expert but i use it regularly. I know about option explicit but if you asked me anything in depth i wouldnt have clue
Good place to start:

http://www.codecademy.com/tracks/python
[Learn Python the Hard Way](http://learnpythonthehardway.org/) or [Bucky's Python Tutorial if you prefer videos](https://www.thenewboston.com/videos.php?cat=36)

VBA is a natural progression. [I say continue to learn it](http://www.amazon.com/Excel-2010-Power-Programming-VBA/dp/0470475358).

There are a variety of ways to learn programming. Python is an interesting language to start with. There is a lot you can learn on your own and I suggest you do so as well. 


Here are my suggestions:

- books: [Learning Python](http://www.amazon.com/Learning-Python-Edition-Mark-Lutz/dp/1449355730), [Python Cookbook](http://www.amazon.com/Python-Cookbook-Third-David-Beazley/dp/1449340377/ref=sr_1_1?s=books&ie=UTF8&qid=1432154813&sr=1-1&keywords=Python+Cookbook), [Think Python](http://www.amazon.com/Think-Python-Allen-B-Downey/dp/144933072X)
- courses: start with [CodeAcademy](http://www.codecademy.com/), [rmotr](http://rmotr.com/) and also (for me very useful) the [O'Reilly Certificate](http://www.oreillyschool.com/certificate-programs/python-programming/).

General advice:

- If Windows (majority of Excel users are), use [Pycharm](https://www.jetbrains.com/pycharm/download/) and [Anaconda](http://continuum.io/downloads). This will save you a lot of time.
- Use [StackOverflow](http://stackoverflow.com/) which you probably already do.



**Disclaimer*:

- I know there are multiple ways of learning programming. This is just my personal experience.
- I know there are a variety of ways to code. I suggest Pycharm since it is less painful do deal with.
- Programmers sometimes like to do things just because they can. For example, you can actually write Python code in Notepad. (Windows text editor, old school, simple). That's not to say that this is how it should be done, especially for a beginner. Just because you can, doesn't mean you should. 
- My background was about getting stuff done and I feel this is how many of us (Excel, VBA crowd) are as well. My suggestions will get you worrying about code more than trying to get everything working correctly.
- I'm telling you this because I wish someone had told me when I started. It was a great learning experience, but sometimes it is good to be efficient in learning as well.
Thanks! Having timed tasks for example ("jobs") that run at a certain time of the day. Imagine your sales guys get their numbers (or whatever report you may need) without having to do anything... it just... runs.
You're hired!
awesome when do i start??
Monday.
