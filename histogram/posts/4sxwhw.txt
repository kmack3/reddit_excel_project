The magic of array formulas!
Can anyone ELI5 how and why array formulas work? 

I use them, but usually just when I've googled my problem and the answer comes up 'use this array formula". I've never been able to fully understand them, and therefor have never been able to utilise them properly. I'd consider myself on the medium to advanced side of Excel users, but somehow arrays have always eluded me.
hmm, have used array formulas for like a million different things. Yesterday I used an array formula to replace one of a number of characters from a string (only one wrong character was present, but it could be one of multiple characters) 


    =substitute(A2,index({"\","[","]","/"},sumproduct({1,2,3,4}*isnumber(search("*"&{"\","[","]","/"}&"*",A2)))),"") 


It's not exactly groundbreaking, but it's the kind of ad-hoc'ery I often use them for.  
Man...did u read my mind or what?
I just found this morning the power of array formulas even for easiest tasks...mind blown indeed! I then update a worksheet that I created some days ago where I needed to list a column from smallest to biggest value numbers taking data from another column WITH empty cells. I did it with 2/3 index match...using 3/4 columns to wrok around the task...and now I did it with 1 array formula.

I suggest to read this if someone doesn't know how to use them: 
https://support.office.com/en-us/article/Guidelines-and-examples-of-array-formulas-7d94a64e-3ff3-4686-9372-ecfd5caa57c7
One you grasp the general functioning of an IF array function, you can start to do some really cool stuff.  One example I use quite often is to automate identification of start and end periods for when a variable exceeds a certain value:
 
    =INDEX(A:A,MIN(IF(B:B>162,ROW(A:A),1000000)))
    =INDEX(A:A,MAX(IF(B:B>162,ROW(A:A),0)))

In this example, A:A contains date/time values, and B:B contains the variable to be tested, the limitation being that if you have multiple ranges of noncompliance separated by periods of compliance, the formulas give the overall range.  You need a bit more logic to be able to identify 1st, 2nd, 3rd etc. exceedances. 
Some interesting things you can do with arrays is make or statements much smaller for instance

    =IF(OR(A2={B2,C3,D4,E5,F6,G7,H8,I9,AA10,BBB11},TRUE,FALSE)
Yes, array formulas make some calculations possible in single cells. The example of conditional averages has alternatives, e.g.,

    =SUMPRODUCT(Rng1,(Rng2=crit1)*(Rng3=crit2))/SUMPRODUCT((Rng2=crit1)*(Rng3=crit2))

which doesn't require array entry. Also from Excel 2013 there's been an AVERAGEIFS function, and from Excel 2010 an AGGREGATE function.

FWLIW, Lotus 1-2-3 Release 3 (1989) and later versions allowed criteria expressions in @DCOUNT and other @D* functions, and that could do several things more clearly than Excel array formulas. Google Sheets has FILTER, SORT and UNIQUE functions which handle more clearly and more simply most of the things for which Excel needs array formulas.

Excel is very good, but there are ample opportunities for improvement.
Simple array formulas can be great but if you're working with big data they slow your spreadsheet down tremendously. 

Wouldn't recommend beyond smaller data sets.
essentially you just need to visualise the operations being done in the formula, often dot products for example in the often used match(1,(A:A="fish")*(B:B="dog"),0) 

The array part internally evaluates the positions in A:A that = fish to a boolean true =1 and similarly in B:B for dog, where the values are not fish / dog respectively the boolean value is 0. 

dot producting these two internal arrays results ina a single array where 1's indicate both fish and dog at the position in A and B., - your regular match formula then uses this array to find the first "1"  and returns the position. 
Highlight the part of the formula that interest you and press F9 to help you see how it works
Functions sometimes have different numbers of outputs (just has they can have different numbers of inputs). The ones that take in arrays as inputs have a choice - do the function on each item, or do the function on all items treated as one value. Like `SUM(array)` will default to summing the entire array. Which makes sense, but what about `SUM(a*b)` where `a` and `b` are ranges? By default, Excel will sum a1 and b1, a2 and b2, ... aN and bN but then keep all N results. So Excel holds an array of results in memory and then lets you index it.

Like [take a look at this example](http://i.imgur.com/JRhLCpB.png). The `=ColA*ColB` is the same formula in D2-D4, but provides different results. This is a convenience feature called implicit intersection in which Excel assumes you want the results from that `*` function for only the row that matters. That's why it goes 10, 200, 3000, and then errors out as it doesn't know which one of the 3 values you want. Same with column E - it adds 5 only to that line's result. Note you can also index these arrays without implicit intersection (D8).

But what if you want the sum of all ColA times ColB? What you need then isn't [SUM(a1\*b1), SUM(a2\*b2)...], but rather SUM((a1\*b1)+(a2\*b2)....).  That's when you use an array formula. You tell Excel to keep the results (of the `*`) as one group, and then another function (`SUM`) gets the whole list as an input. So then SUM(list) returns one result because that's what SUM does. But also note the value stays the same, and you can't index it this time.
I made [this comment](https://www.reddit.com/r/excel/comments/301l3p/sorting_school_name_with_multiple_attendees/cpofcd6) a while back to explain array formulas.  Hopefully it can help you out.
Can you give an example of what was in A2?
This formula will be a learning experience for me.  I copied and pasted it into my sheet and got it to work with dummy data in A2, but now I'm trying to deconstruct it.  I know what each of the individual formulas are, but I'm having trouble figuring out why it works in the manner that it's nested.  Do you mind providing a step-by step analysis? 

I ran Evaluate formula, and followed along pretty well, but I can't figure out what the 1,2,3,4 are in your sumproduct formula.  It seems to multiply 4*/ in the last step, and that's making my brain-box tickle.  Also, I can't figure out what the &"*" is for in the search function.
Did you actually try to enter that formula in Excel? Braces within formulas denote array constants. No such thing as a constant array of ranges.
Array formula slow-down depends on exactly what you're doing. MATCH(1,(A:A=x)*(B:B=y),0) can be quite slow, while MATCH(TRUE,IF(A:A=x,B:B=y),0) is a bit faster.
That is a great explanation, never realized that's how it was working.
015376357/  or ]53689531, basically a code that, god knows why, had a character attached to it
& concatenates (joins) two strings, in this case {,,,} is an array, so it concatenates the \* on to each side of each element of the array. It's just instead of writing "\*/\*" and "\*[\*".

The stars work as wild cards for the search function, i don't care if there are other things next to the character.

The search function with an array search term returns an array of results. 4 search terms, 4 array rows. 

Wrap this in an isnumber to turn it into a 0 or 1 array, depending on whether the term was found (in which case search would return it's location, and otherwise an error) {0,0,1,0}


There are 4 search terms in the list, so multiplying with an array of {1,2,3,4} will return a number of zeroes and a single digit, where the search term was found. This digit then identifies which term it was. {0,0,3,0}


You can then get this digit by summing that array (0+0+3+0), and use it in an index formula of your list of search terms (ordered in the same way) to return the actual character (number 3, "]"). 


This character is then fed to a substitute that replaces it in the text.

Hope that made sense.


It's worth noting that this only worked because I only ever had one search term in my string. If I had both term 2 and 3, for example, i would be indexing row 5 (0+2+3+0), which doesn't exist.

The substitute function does not work with arrays, which is why it needs to be told specifically which character it should remove.


I wish I could just give it a list of unwanted characters :p
practical use of an arrray formula (google sheets syntax) - credit to /u/javiik for his explanation: https://www.reddit.com/r/excel/comments/3xff3y/is_there_a_simple_way_to_convert_the_cell_value/


WOW.  Thank you so much!  That is perfect.  I'll read it thoroughly and learn it back and forth.  
Wow thanks for the gold that's really too much! If you have any follow up questions just ask away.
